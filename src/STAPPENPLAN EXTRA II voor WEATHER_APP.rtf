{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang2057{\fonttbl{\f0\fnil\fcharset0 Calibri;}{\f1\fmodern JetBrains Mono;}}
{\colortbl ;\red204\green120\blue50;\red152\green118\blue170;\red169\green183\blue198;\red255\green198\blue109;\red106\green135\blue89;\red192\green192\blue192;\red232\green191\blue106;\red186\green186\blue186;\red128\green128\blue128;\red104\green151\blue187;\red109\green156\blue190;}
{\*\generator Riched20 10.0.19041}\viewkind4\uc1 
\pard\box\brdrdash\brdrw0 \sa200\sl276\slmult1\b\f0\fs28\lang9 STAPPENPLAN EXTRA II voor WEATHER_APP\line ---------------------------------------------------\line\ul STAP 6: ERRORS AFHANDELEN EN WEERGEVEN\ulnone\b0\fs22\line\b STAP 6.1 - INITIALIZE ERROR IN APP.JS :\line ---\line\fs28\line\b0\fs22 We gaan nu verder met het maken van 3 ERROR meldingen die aan de gebruiker WEERGEGEVEN MOETEN WORDEN OP DE WEBPAGE. \line\line We maken de eerste op App.js:\line -\line\cf1\f1\fs20 import \cf2\b\i React\cf1\b0\i0 , \cf3\{ \cf4 useState\cf1 , \cf4 useEffect \cf3\} \cf1 from \cf5 'react'\cf1 ;\line import \cf2\b\i axios \cf1\b0\i0 from \cf5 'axios'\cf1 ;\line import \cf3 SearchBar \cf1 from \cf5 './components/searchBar/SearchBar'\cf1 ;\line import \cf3 TabBarMenu \cf1 from \cf5 './components/tabBarMenu/TabBarMenu'\cf1 ;\line import \cf3 MetricSlider \cf1 from \cf5 './components/metricSlider/MetricSlider'\cf1 ;\line import \cf3 ForecastTab \cf1 from \cf5 './pages/forecastTab/ForecastTab'\cf1 ;\line import \cf5 './App.css'\cf1 ;\line\line const \cf3 apiKey = \cf5 'plaats jouw unieke API key hier'\cf1 ;\line\line function \cf4 App\cf3 () \{\line     \cf1 const \cf3 [weatherData\cf1 , \cf3 setWeatherData] = \cf4 useState\cf3 (\{\})\cf1 ;\line     const \cf3 [location\cf1 , \cf3 setLocation] = \cf4 useState\cf3 (\cf5 ''\cf3 )\cf1 ;\cf0\highlight6\line     const [error, toggleError] = useState(false);\line\cf1\highlight0\line     \cf4 useEffect\cf3 (() => \{\line         \cf1 async function \cf4 fetchData\cf3 () \{\line             \cf0\highlight6 toggleError(false);\line\cf1\highlight0\line             try \cf3\{\line                 \cf1 const \cf3 result = \cf1 await \cf2\b\i axios\cf3\b0\i0 .\cf4 get\cf3 (\cf5 `https://api.openweathermap.org/data/2.5/weather?q=\cf3 $\{location\}\cf5 ,nl&appid=\cf3 $\{apiKey\}\cf5 &lang=nl`\cf3 )\cf1 ;\line                 \cf2\b\i console\cf3\b0\i0 .\cf4 log\cf3 (result.\cf2 data\cf3 )\cf1 ;\line                 \cf3 setWeatherData(result.\cf2 data\cf3 )\cf1 ;\line             \cf3\} \cf1 catch \cf3 (e) \{\line                 \cf2\b\i console\cf3\b0\i0 .\cf4 error\cf3 (e)\cf1 ;\line             \cf0\highlight6     toggleError(true);\line\cf1\highlight0             \cf3\}\line         \}\line\line         \cf1 if \cf3 (location) \{\line             \cf4 fetchData\cf3 ()\cf1 ;\line         \cf3\}\line     \}\cf1 , \cf3 [location])\cf1 ;\line\line     return \cf3 (\line         \cf7 <>\line             <div \cf8 className\cf5 ="weather-container"\cf7 >\line\line                 \cf3\{\cf9 /*HEADER -------------------- */\cf3\}\line                 \cf7 <div \cf8 className\cf5 ="weather-header"\cf7 >\line                     <SearchBar \cf8 setLocationHandler\cf5 =\cf3\{setLocation\}\cf7 />\line                     \cf0\highlight6\{error &&\line                     <span className="wrong-location-error">\line               Oeps! Deze locatie bestaat niet\line             </span>\line\cf7\highlight0                     \cf3\}\line\line                     \cf7 <span \cf8 className\cf5 ="location-details"\cf7 >\line             \cf3\{\cf2\b\i Object\cf3\b0\i0 .\cf4 keys\cf3 (weatherData).\cf2 length \cf3 > \cf10 0 \cf3 &&\line             \cf7 <>\line                 <h2>\cf3\{weatherData.weather[\cf10 0\cf3 ].\cf2 description\cf3\}\cf7 </h2>\line                 <h3>\cf3\{weatherData.\cf2 name\cf3\}\cf7 </h3>\line                 <h1>\cf3\{weatherData.\cf2 main\cf3 .temp\}\cf7 </h1>\line             </>\line             \cf3\}\line           \cf7 </span>\line                 </div>\line\line                 \cf3\{\cf9 /*CONTENT ------------------ */\cf3\}\line                 \cf7 <div \cf8 className\cf5 ="weather-content"\cf7 >\line                     <TabBarMenu/>\line\line                     <div \cf8 className\cf5 ="tab-wrapper"\cf7 >\line                         <ForecastTab \cf8 coordinates\cf5 =\cf3\{weatherData.coord\}\cf7 />\line                     </div>\line                 </div>\line\line                 <MetricSlider/>\line             </div>\line         </>\line     \cf3 )\cf1 ;\line\cf3\}\line\line\cf1 export default \cf4 App\cf1 ;\par
\cf0\f0\fs22\line WE ADDEN EEN error-state BIJ USE-STATE\line WE ADDEN errorToggle FALSE bij START App ZODAT DE ERROR ALTIJD DEFAULT FALSE IS\line WE ADDEN BIJ RETURN ALS(IF) ERROR IS VOORGEKOMEN:EEN ERROR MESSAGE IN <span>\line -----\line\line\b STAP 6.1 - ERROR FOR FORECASTTAB:\line ---\line\b0\line Nu gaan we dit ook voor ForecastTab.js doen:\line\line\cf1\f1\fs20 import \cf2\b\i React\cf1\b0\i0 , \cf3\{ \cf4 useState\cf1 , \cf4 useEffect \cf3\} \cf1 from \cf5 'react'\cf1 ;\line import \cf2\b\i axios \cf1\b0\i0 from \cf5 'axios'\cf1 ;\line import \cf5 './ForecastTab.css'\cf1 ;\line\line const \cf3 apiKey = \cf5 'plaats jouw unieke API key hier'\cf1 ;\line\line function \cf4 ForecastTab\cf3 (\{ coordinates \}) \{\line     \cf1 const \cf3 [forecasts\cf1 , \cf3 setForecasts] = \cf4 useState\cf3 ([])\cf1 ;\line\cf0\highlight6     const [error, toggleError] = useState(false);\line\cf1\highlight0\line     function \cf4 createDateString\cf3 (timestamp) \{\line         \cf1 const \cf3 day = \cf1 new \cf2\b\i Date\cf3\b0\i0 (timestamp * \cf10 1000\cf3 )\cf1 ;\line\line         return \cf3 day.\cf4 toLocaleDateString\cf3 (\cf5 'nl-NL'\cf1 , \cf3\{ \cf2 weekday\cf3 : \cf5 'long' \cf3\})\cf1 ;\line     \cf3\}\line\line     \cf4 useEffect\cf3 (() => \{\line         \cf1 async function \cf4 fetchData\cf3 () \{\line             \cf0\highlight6 toggleError(false);\line\cf1\highlight0\line             try \cf3\{\line                 \cf1 const \cf3 result = \cf1 await \cf2\b\i axios\cf3\b0\i0 .\cf4 get\cf3 (\cf5 `https://api.openweathermap.org/data/2.5/onecall?lat=\cf3 $\{coordinates.lat\}\cf5 &lon=\cf3 $\{coordinates?.lon\}\cf5 &exclude=minutely,current,hourly&appid=\cf3 $\{apiKey\}\cf5 &lang=nl`\cf3 )\cf1 ;\line                 \cf2\b\i console\cf3\b0\i0 .\cf4 log\cf3 (result.\cf2 data\cf3 )\cf1 ;\line                 \cf3 setForecasts(result.\cf2 data\cf3 .daily.\cf4 slice\cf3 (\cf10 1\cf1 , \cf10 6\cf3 ))\cf1 ;\line             \cf3\} \cf1 catch \cf3 (e) \{\line                 \cf2\b\i console\cf3\b0\i0 .\cf4 error\cf3 (e)\cf1 ;\line                 \cf0\highlight6 toggleError(true);\cf1\highlight0\line             \cf3\}\line         \}\line\line         \cf1 if \cf3 (coordinates) \{\line             \cf4 fetchData\cf3 ()\cf1 ;\line         \cf3\}\line     \}\cf1 , \cf3 [coordinates])\cf1 ;\line\line     return \cf3 (\line\cf0\highlight6         <div className="tab-wrapper">\line             \{error && <span>Er is iets misgegaan met het ophalen van de data</span>\}\line             \{forecasts.length === 0 && !error &&\line             <span className="no-forecast">\line           Zoek eerst een locatie om het weer voor deze week te bekijken\line         </span>\line\cf7\highlight0             \cf3\}\line             \{forecasts.\cf4 map\cf3 ((day) => \{\line                 \cf1 return \cf3 (\line                     \cf7 <article \cf8 className\cf5 ="forecast-day" \cf8 key\cf5 =\cf3\{day.\cf2 dt\cf3\}\cf7 >\line                         <p \cf8 className\cf5 ="day-description"\cf7 >\line                             \cf3\{\cf4 createDateString\cf3 (day.\cf2 dt\cf3 )\}\line                         \cf7 </p>\line\line                         <section \cf8 className\cf5 ="forecast-weather"\cf7 >\line             <span>\line               \cf3\{day.temp.\cf2 day\cf3\}\line             \cf7 </span>\line                             <span \cf8 className\cf5 ="weather-description"\cf7 >\line               \cf3\{day.weather[\cf10 0\cf3 ].\cf2 description\cf3\}\line             \cf7 </span>\line                         </section>\line                     </article>\line                 \cf3 )\cf1 ;\line             \cf3\})\}\line         \cf7 </div>\line     \cf3 )\cf1 ;\line\cf3\}\line\line\cf1 export default \cf4 ForecastTab\cf1 ;\line\line\cf0\f0\fs22\line WE ADDEN EEN error-state BIJ USE-STATE\line WE ADDEN errorToggle FALSE bij START App ZODAT DE ERROR ALTIJD DEFAULT FALSE IS\line WE ADDEN BIJ RETURN ALS(IF) ERROR IS VOORGEKOMEN:EEN ERROR MESSAGE IN <span>\line WE ADDEN OOK EEN ALS(IF) ERROR <span> ALS ER NIETS IS INGEVULD ZONDER VERDERE ERROR, want we willen dan duidelijk maken aan de gebruiker dat er niets is gebeurd omdat er niets is ingevuld.\line -----\line\line\ul\b\fs28 STAP 7: LAADTIJDEN AFHANDELEN EN WEERGEVEN\ulnone\b0\fs22\line\b STAP 7.1 - LOADING, TOGGLELOADING:\line ---\line\b0\line\cf1\f1\fs20 import \cf2\b\i React\cf1\b0\i0 , \cf3\{ \cf4 useState\cf1 , \cf4 useEffect \cf3\} \cf1 from \cf5 'react'\cf1 ;\line import \cf2\b\i axios \cf1\b0\i0 from \cf5 'axios'\cf1 ;\line import \cf5 './ForecastTab.css'\cf1 ;\line\line const \cf3 apiKey = \cf5 'plaats jouw unieke API key hier'\cf1 ;\line\line function \cf4 ForecastTab\cf3 (\{ coordinates \}) \{\line     \cf1 const \cf3 [forecasts\cf1 , \cf3 setForecasts] = \cf4 useState\cf3 ([])\cf1 ;\line     const \cf3 [error\cf1 , \cf3 toggleError] = \cf4 useState\cf3 (\cf1 false\cf3 )\cf1 ;\line     \cf0\highlight6 const [loading, toggleLoading] = useState(false);\cf1\highlight0\line\line     function \cf4 createDateString\cf3 (timestamp) \{\line         \cf1 const \cf3 day = \cf1 new \cf2\b\i Date\cf3\b0\i0 (timestamp * \cf10 1000\cf3 )\cf1 ;\line\line         return \cf3 day.\cf4 toLocaleDateString\cf3 (\cf5 'nl-NL'\cf1 , \cf3\{ \cf2 weekday\cf3 : \cf5 'long' \cf3\})\cf1 ;\line     \cf3\}\line\line     \cf4 useEffect\cf3 (() => \{\line         \cf1 async function \cf4 fetchData\cf3 () \{\line             toggleError(\cf1 false\cf3 )\cf1 ;\line             \cf0\highlight6 toggleLoading(true);\cf1\highlight0\line\line             try \cf3\{\line                 \cf1 const \cf3 result = \cf1 await \cf2\b\i axios\cf3\b0\i0 .\cf4 get\cf3 (\cf5 `https://api.openweathermap.org/data/2.5/onecall?lat=\cf3 $\{coordinates.lat\}\cf5 &lon=\cf3 $\{coordinates?.lon\}\cf5 &exclude=minutely,current,hourly&appid=\cf3 $\{apiKey\}\cf5 &lang=nl`\cf3 )\cf1 ;\line                 \cf2\b\i console\cf3\b0\i0 .\cf4 log\cf3 (result.\cf2 data\cf3 )\cf1 ;\line                 \cf3 setForecasts(result.\cf2 data\cf3 .daily.\cf4 slice\cf3 (\cf10 1\cf1 , \cf10 6\cf3 ))\cf1 ;\line             \cf3\} \cf1 catch \cf3 (e) \{\line                 \cf2\b\i console\cf3\b0\i0 .\cf4 error\cf3 (e)\cf1 ;\line                 \cf3 toggleError(\cf1 true\cf3 )\cf1 ;\line             \cf3\}\line             toggleLoading(\cf1 false\cf3 )\cf1 ;\line         \cf3\}\line\line         \cf1 if \cf3 (coordinates) \{\line             \cf4 fetchData\cf3 ()\cf1 ;\line         \cf3\}\line     \}\cf1 , \cf3 [coordinates])\cf1 ;\line\line     return \cf3 (\line         \cf7 <div \cf8 className\cf5 ="tab-wrapper"\cf7 >\line             \cf3\{error && \cf7 <span>\cf3 Er is iets misgegaan met het ophalen van de data\cf7 </span>\cf3\}\line             \cf0\highlight6\{loading && <span>Loading...</span>\}\cf3\highlight0\line             \{forecasts.\cf2 length \cf3 === \cf10 0 \cf3 && !error &&\line             \cf7 <span \cf8 className\cf5 ="no-forecast"\cf7 >\line           \cf3 Zoek eerst een locatie om het weer voor deze week te bekijken\line         \cf7 </span>\line             \cf3\}\line             \{forecasts.\cf4 map\cf3 ((day) => \{\line                 \cf1 return \cf3 (\line                     \cf7 <article \cf8 className\cf5 ="forecast-day" \cf8 key\cf5 =\cf3\{day.\cf2 dt\cf3\}\cf7 >\line                         <p \cf8 className\cf5 ="day-description"\cf7 >\line                             \cf3\{\cf4 createDateString\cf3 (day.\cf2 dt\cf3 )\}\line                         \cf7 </p>\line\line                         <section \cf8 className\cf5 ="forecast-weather"\cf7 >\line             <span>\line               \cf3\{day.temp.\cf2 day\cf3\}\line             \cf7 </span>\line                             <span \cf8 className\cf5 ="weather-description"\cf7 >\line               \cf3\{day.weather[\cf10 0\cf3 ].\cf2 description\cf3\}\line             \cf7 </span>\line                         </section>\line                     </article>\line                 \cf3 )\cf1 ;\line             \cf3\})\}\line         \cf7 </div>\line     \cf3 )\cf1 ;\line\cf3\}\line\line\cf1 export default \cf4 ForecastTab\cf1 ;\par
\cf0\f0\fs22\line WE MAKEN loading-state IN USE-STATE\line WE ZETTEN MET toggleLoading TIJDENS RUNNEN USE-EFFECT OM LOADING "ON" TE ZETTEN\line WE ADDEN BIJ RETURN ALS(IF) LOADING IS VOORGEKOMEN:EEN LOADING message <span>\line\line\ul\b\fs28 STAP 8: TABBLADEN (BROWSERROUTER) IMPLEMENTEREN\ulnone\b0\fs22\line\b STAP 8.1 - INITIALIZE BROWSERROUTER IN APP.JS :\line ---\line\b0\line\cf1\f1\fs20 import \cf2\b\i React\cf1\b0\i0 , \cf3\{ \cf4 useState\cf1 , \cf4 useEffect \cf3\} \cf1 from \cf5 'react'\cf1 ;\line\cf0\highlight6 import \{\line     BrowserRouter as Router,\line     Switch,\line     Route,\line\} from 'react-router-dom';\line\cf1\highlight0 import \cf2\b\i axios \cf1\b0\i0 from \cf5 'axios'\cf1 ;\line import \cf3 SearchBar \cf1 from \cf5 './components/searchBar/SearchBar'\cf1 ;\line import \cf3 TabBarMenu \cf1 from \cf5 './components/tabBarMenu/TabBarMenu'\cf1 ;\line import \cf3 MetricSlider \cf1 from \cf5 './components/metricSlider/MetricSlider'\cf1 ;\line import \cf3 ForecastTab \cf1 from \cf5 './pages/forecastTab/ForecastTab'\cf1 ;\line\cf0\highlight6 import TodayTab from './pages/todayTab/TodayTab';\cf1\highlight0\line import \cf5 './App.css'\cf1 ;\line\line const \cf3 apiKey = \cf5 'plaats jouw unieke API key hier'\cf1 ;\line\line function \cf4 App\cf3 () \{\line     \cf1 const \cf3 [weatherData\cf1 , \cf3 setWeatherData] = \cf4 useState\cf3 (\{\})\cf1 ;\line     const \cf3 [location\cf1 , \cf3 setLocation] = \cf4 useState\cf3 (\cf5 ''\cf3 )\cf1 ;\line     const \cf3 [error\cf1 , \cf3 toggleError] = \cf4 useState\cf3 (\cf1 false\cf3 )\cf1 ;\line\line     \cf4 useEffect\cf3 (() => \{\line         \cf1 async function \cf4 fetchData\cf3 () \{\line             toggleError(\cf1 false\cf3 )\cf1 ;\line\line             try \cf3\{\line                 \cf1 const \cf3 result = \cf1 await \cf2\b\i axios\cf3\b0\i0 .\cf4 get\cf3 (\cf5 `https://api.openweathermap.org/data/2.5/weather?q=\cf3 $\{location\}\cf5 ,nl&appid=\cf3 $\{apiKey\}\cf5 &lang=nl`\cf3 )\cf1 ;\line                 \cf2\b\i console\cf3\b0\i0 .\cf4 log\cf3 (result.\cf2 data\cf3 )\cf1 ;\line                 \cf3 setWeatherData(result.\cf2 data\cf3 )\cf1 ;\line             \cf3\} \cf1 catch \cf3 (e) \{\line                 \cf2\b\i console\cf3\b0\i0 .\cf4 error\cf3 (e)\cf1 ;\line                 \cf3 toggleError(\cf1 true\cf3 )\cf1 ;\line             \cf3\}\line         \}\line\line         \cf1 if \cf3 (location) \{\line             \cf4 fetchData\cf3 ()\cf1 ;\line         \cf3\}\line     \}\cf1 , \cf3 [location])\cf1 ;\line\line     return \cf3 (\line         \cf7 <>\line             <div \cf8 className\cf5 ="weather-container"\cf7 >\line\line                 \cf3\{\cf9 /*HEADER -------------------- */\cf3\}\line                 \cf7 <div \cf8 className\cf5 ="weather-header"\cf7 >\line                     <SearchBar \cf8 setLocationHandler\cf5 =\cf3\{setLocation\}\cf7 />\line                     \cf3\{error &&\line                     \cf7 <span \cf8 className\cf5 ="wrong-location-error"\cf7 >\line               \cf3 Oeps! Deze locatie bestaat niet\line             \cf7 </span>\line                     \cf3\}\line\line                     \cf7 <span \cf8 className\cf5 ="location-details"\cf7 >\line             \cf3\{\cf2\b\i Object\cf3\b0\i0 .\cf4 keys\cf3 (weatherData).\cf2 length \cf3 > \cf10 0 \cf3 &&\line             \cf7 <>\line                 <h2>\cf3\{weatherData.weather[\cf10 0\cf3 ].\cf2 description\cf3\}\cf7 </h2>\line                 <h3>\cf3\{weatherData.\cf2 name\cf3\}\cf7 </h3>\line                 <h1>\cf3\{weatherData.\cf2 main\cf3 .temp\}\cf7 </h1>\line             </>\line             \cf3\}\line           \cf7 </span>\line                 </div>\line\line                 \cf3\{\cf9 /*CONTENT ------------------ */\cf3\}\cf0\highlight6\line                 <Router>\line                     <div className="weather-content">\line                         <TabBarMenu/>\line\line                         <Switch>\line                             <div className="tab-wrapper">\line                                 <Route path="/komende-week">\line                                     <ForecastTab coordinates=\{weatherData.coord\}/>\line                                 </Route>\line                                 <Route path="/" exact>\line                                     <TodayTab />\line                                 </Route>\line                             </div>\line                         </Switch>\line                     </div>\line                 </Router>\line\cf7\highlight0\line                 <MetricSlider/>\line             </div>\line         </>\line     \cf3 )\cf1 ;\line\cf3\}\line\line\cf1 export default \cf4 App\cf1 ;\par
\cf0\f0\fs22 WE IMPORTEREN DE REACT ROUTERS (BROWSERROUTER(as Router),SWITCH,ROUTE)\b\line\b0 WE ADDEN IN RETURN EEN ROUTER COMPONENT <Router>\line WE ADDEN IN RETURN EEN SWITCH COMPONENT <Switch>\line WE ADDEN EEN FORECAST ROUTE \highlight6\f1\fs20 <Route path="/komende-week">\highlight0\f0\fs22\line WE ADDEN EEN TODAYTAB ROUTE \highlight6\f1\fs20 <Route path="/" exact>\f0\lang1033     \f1\lang9 <TodayTab />\line\highlight0\f0\fs22 WE IMPORTEREN TODAYTAB\line ------\line\line\b STAP 8.2 - FINISH TABBARMENU.JS :\line ---\line\b0\line\cf1\f1\fs20 import \cf2\b\i React \cf1\b0\i0 from \cf5 'react'\cf1 ;\line\cf0\highlight6 import \{ NavLink \} from 'react-router-dom';\cf1\highlight0\line import \cf5 './TabBarMenu.css'\cf1 ;\line\line function \cf4 TabBarMenu\cf3 () \{\line     \cf1 return \cf3 (\line         \cf7 <nav \cf8 className\cf5 ="tab-bar"\cf7 >\line             <ul>\line                 <li>\line\cf0\highlight6                     <NavLink activeClassName="active" to="/" exact>\line                         Vandaag\line                     </NavLink>\line                 </li>\line                 <li>\line                     <NavLink activeClassName="active" to="/komende-\line\f0\lang1033                                                   \f1\lang9 week">\line                         Komende week\line                     </NavLink>\line\cf7\highlight0                 </li>\line             </ul>\line         </nav>\line     \cf3 )\cf1 ;\line\cf3\}\line\line\cf1 export default \cf4 TabBarMenu\cf1 ;\par

\pard\box\brdrdash\brdrw0 \sa200\sl276\slmult1\cf0\ul\b\f0\fs28 STAP 9: HELPERFUNCTIES, TODAY-TAB.JS & WEATHER-DETAIL.JS\ulnone\b0\fs22\line\b STAP 9.1 - HELPER FUNCTIONS JAVASCRIPT FILES MAKEN:\line ---\line LET OP DIT ZIJN JAVASCRIPT FILES DUS GEEN HOOFDLETTER\line\line AAA:\line - kelvinToCelsius.js \line\cf1\b0\f1\fs20 function \cf4 kelvinToCelsius\cf3 (kelvin) \{\line     \cf1 return \cf5 `\cf3 $\{\cf2\b\i Math\cf3\b0\i0 .\cf4 round\cf3 (kelvin - \cf10 273.15\cf3 )\}\cf5\f0\'b0\f1  C`\cf1 ;\line\cf3\}\line\line\cf1 export default \cf4 kelvinToCelsius\cf1 ;\line\cf0\b\f0\fs22\line\b0 Create helper folder with kelvinToCelsius.js\line Create converter function\line Export function out of file\line\line\b BBB:\line - createTimeString.js\line\cf1\b0\f1\fs20 function \cf4 createTimeString\cf3 (timestamp) \{\line     \cf1 const \cf3 day = \cf1 new \cf2\b\i Date\cf3\b0\i0 (timestamp * \cf10 1000\cf3 )\cf1 ;\line\line     return \cf3 day.\cf4 toLocaleTimeString\cf3 ([]\cf1 , \cf3\{ \cf2 hour\cf3 : \cf5 '2-digit'\cf1 , \cf2 minute\cf3 : \cf5 '2-digit' \cf3\})\cf1 ;\line\cf3\}\line\line\cf1 export default \cf4 createTimeString\cf1 ;\par
\cf0\b\f0\fs22\line\b0 Create helper function file createTimeString\line Implement createTimeString function\line\line\b CCC:\line - createDateString.js\line\line\cf1\b0\f1\fs20 function \cf4 createDateString\cf3 (timestamp) \{\line     \cf1 const \cf3 day = \cf1 new \cf2\b\i Date\cf3\b0\i0 (timestamp * \cf10 1000\cf3 )\cf1 ;\line\line     return \cf3 day.\cf4 toLocaleDateString\cf3 (\cf5 'nl-NL'\cf1 , \cf3\{ \cf2 weekday\cf3 : \cf5 'long' \cf3\})\cf1 ;\line\cf3\}\line\line\cf1 export default \cf4 createDateString\cf1 ;\par
\cf0\b\f0\fs22 STAP 9.2 - TODAY-TAB.JS ---TodayTab.js MAKEN:\line ---\line\b0 Het tabblad waarin de uitgebreide weersvoorspelling voor vandaag willen weergeven (<TodayTab>) is nog een beetje leeg. Ook hier gaan we een GET-request voor doen - dit keer voor de voorspelling per uur\line\line\b\lang2057 IK WEET NIET MEER OF IK AL HEB LATEN ZIEN HOE WE DIT COMPONENT MAKEN, DUS IK DOE HET HIERBIJ NOG EEN KEER HEEL KORT MET STAPPEN :\b0\lang9\line\line\cf1\f1\fs20 import \cf2\b\i React \cf1\b0\i0 from \cf5 'react'\cf1 ;\line import \cf5 './TodayTab.css'\cf1 ;\line\line function \cf4 TodayTab\cf3 () \{\line     \cf1 return\cf3 (\line         \cf7 <div \cf8 className\cf5 ="tab-wrapper"\cf7 >\line             <div \cf8 className\cf5 ="chart"\cf7 >\line                 \cf3 Hier komt de chart!\line             \cf7 </div>\line             <div \cf8 className\cf5 ="legend"\cf7 >\line                 <span>\cf3 08:00 uur\cf7 </span>\line                 <span>\cf3 12:00 uur\cf7 </span>\line                 <span>\cf3 16:00 uur\cf7 </span>\line             </div>\line         </div>\line     \cf3 )\cf1 ;\line\cf3\}\cf1 ;\line\line export default \cf4 TodayTab\cf1 ;\cf0\f0\fs22\line\line 01 - WE MAKEN HIER DE Setup VAN boilerplate\line\line\cf1\f1\fs20 import \cf2\b\i React\cf1\b0\i0 , \cf3\{ \cf4 useState\cf1 , \cf4 useEffect \cf3\} \cf1 from \cf5 'react'\cf1 ;\line import \cf3 axios \cf1 from \cf5 'axios'\cf1 ;\line import \cf5 './TodayTab.css'\cf1 ;\line\line const \cf3 apiKey = \cf5 'plaats jouw unieke API key hier'\cf1 ;\line\line function \cf4 TodayTab\cf3 (\{ coordinates \}) \{\line     \cf1 const \cf3 [forecasts\cf1 , \cf3 setForecasts] = \cf4 useState\cf3 ([])\cf1 ;\line     const \cf3 [error\cf1 , \cf3 toggleError] = \cf4 useState\cf3 (\cf1 false\cf3 )\cf1 ;\line     const \cf3 [loading\cf1 , \cf3 toggleLoading] = \cf4 useState\cf3 (\cf1 false\cf3 )\cf1 ;\line\line     \cf4 useEffect\cf3 (() => \{\line         \cf1 async function \cf4 fetchData\cf3 () \{\line             toggleError(\cf1 false\cf3 )\cf1 ;\line             \cf3 toggleLoading(\cf1 true\cf3 )\cf1 ;\line\line             try \cf3\{\line                 \cf1 const \cf3 result = \cf1 await \cf3 axios.\cf4 get\cf3 (\cf5 `https://api.openweathermap.org/data/2.5/onecall?lat=\cf3 $\{coordinates.lat\}\cf5 &lon=\cf3 $\{coordinates.lon\}\cf5 &exclude=minutely,current,daily&appid=\cf3 $\{apiKey\}\cf5 `\cf3 )\cf1 ;\line                 \cf3 setForecasts([\line                     result.\cf2 data\cf3 .hourly[\cf10 3\cf3 ]\cf1 ,\line                     \cf3 result.\cf2 data\cf3 .hourly[\cf10 5\cf3 ]\cf1 ,\line                     \cf3 result.\cf2 data\cf3 .hourly[\cf10 7\cf3 ]\cf1 ,\line                 \cf3 ])\cf1 ;\line                 \cf2\b\i console\cf3\b0\i0 .\cf4 log\cf3 (result.\cf2 data\cf3 )\cf1 ;\line             \cf3\} \cf1 catch \cf3 (e) \{\line                 \cf2\b\i console\cf3\b0\i0 .\cf4 error\cf3 (e)\cf1 ;\line                 \cf3 toggleError(\cf1 true\cf3 )\cf1 ;\line             \cf3\}\line\line             toggleLoading(\cf1 false\cf3 )\cf1 ;\line         \cf3\}\line\line         \cf1 if \cf3 (coordinates) \{\line             \cf4 fetchData\cf3 ()\cf1 ;\line         \cf3\}\line\line     \}\cf1 , \cf3 [coordinates])\cf1 ;\line\line     return \cf3 (\line         \cf7 <div \cf8 className\cf5 ="tab-wrapper"\cf7 >\line             <div \cf8 className\cf5 ="chart"\cf7 >\line                 \cf3 Hier komt de chart!\line             \cf7 </div>\line             <div \cf8 className\cf5 ="legend"\cf7 >\line                 <span>\cf3 08:00 uur\cf7 </span>\line                 <span>\cf3 12:00 uur\cf7 </span>\line                 <span>\cf3 16:00 uur\cf7 </span>\line             </div>\line         </div>\line     \cf3 )\cf1 ;\line\cf3\}\line\line\cf1 export default \cf4 TodayTab\cf1 ;\par
\cf0\f0\fs22\line 02 - Destructure coordinates property in TodayTab.js\line 03 - Create another apiKey variable\line 04 - Implement update cycle hook\line 05 - Create async function\line 06 - Make sure fetchData is only called when coordinates is defined\line 07 - Create try/catch block\line 08 - Fetch the data with axios and log it in the console\line 09 - Create state for forecast data\line 10 - Set data into state\line 11 - Create error state\line 12 - Toggle error during request\line 13 - Create loading state\line 14 - Toggle loading during request\line 15 - Only set three hourly forecasts\line\line\b STAP 9.3 - WEATHERDETAIL.JS ---WeatherDetail.js MAKEN:\line ---\line\line\cf1\b0\f1\fs20 import \cf2\b\i React \cf1\b0\i0 from \cf5 'react'\cf1 ;\line import \cf5 './WeatherDetail.css'\cf1 ;\line\line function \cf4 WeatherDetail\cf3 () \{\line     \cf1 return \cf3 (\line         \cf7 <section \cf8 className\cf5 ="day-part"\cf7 >\line       <span \cf8 className\cf5 ="icon-wrapper"\cf7 >\line         \cf3 *Icoontje van het weer*\line       \cf7 </span>\line             <p \cf8 className\cf5 ="description"\cf7 >\cf3 Zonnig\cf7 </p>\line             <p>\cf3 13\cf11 &deg; \cf3 C\cf7 </p>\line         </section>\line     \cf3 )\cf1 ;\line\cf3\}\cf1 ;\line\line export default \cf4 WeatherDetail\cf1 ;\par
\cf0\b\f0\fs22\line\b0 01 - WE MAKEN HIER DE Setup VAN boilerplate\line\line\cf1\f1\fs20 import \cf2\b\i React \cf1\b0\i0 from \cf5 'react'\cf1 ;\line import \cf5 './WeatherDetail.css'\cf1 ;\line import \cf3 kelvinToCelsius \cf1 from \cf5 '../../helpers/kelvinToCelsius'\cf1 ;\line import \cf3 iconMapper \cf1 from \cf5 '../../helpers/iconMapper'\cf1 ;\line\line function \cf4 WeatherDetail\cf3 (\{ description\cf1 , \cf3 temp\cf1 , \cf3 type \}) \{\line     \cf1 return \cf3 (\line         \cf7 <section \cf8 className\cf5 ="day-part"\cf7 >\line       <span \cf8 className\cf5 ="icon-wrapper"\cf7 >\line         \cf3\{iconMapper(type)\}\line       \cf7 </span>\line             <p \cf8 className\cf5 ="description"\cf7 >\cf3\{description\}\cf7 </p>\line             <p>\cf3\{kelvinToCelsius(temp)\}\cf7 </p>\line         </section>\line     \cf3 )\cf1 ;\line\cf3\}\line\line\cf1 export default \cf4 WeatherDetail\par
\cf0\f0\fs22\line 02 - Update Readme\line 03 - Destructure properties\line 04 - Replace dummy temperature with prop\line 05 - Replace zonnig with the actual description\line DEZE TWEE STAPPEN ZIJN ALVAST VOOR STAP 10 !!!\line 06 - Import iconmapper into WeatherDetail\line 07 - Use iconmapper for icon\line\line\b STAP 9.4 - WeatherDetail.JS IN TodayTab.JS IMPLEMENTEREN + TIMESTAMPS + ERROR/LOADING:\line ---\line\line\cf1\b0\f1\fs20 import \cf2\b\i React\cf1\b0\i0 , \cf3\{ \cf4 useState\cf1 , \cf4 useEffect \cf3\} \cf1 from \cf5 'react'\cf1 ;\line import \cf3 axios \cf1 from \cf5 'axios'\cf1 ;\line\cf0\highlight6 import WeatherDetail from '../../components/weatherDetail/WeatherDetail';\cf1\highlight0\line import \cf3 createTimeString \cf1 from \cf5 '../../helpers/createTimeString'\cf1 ;\line import \cf5 './TodayTab.css'\cf1 ;\line\line const \cf3 apiKey = \cf5 'plaats jouw unieke API key hier'\cf1 ;\line\line function \cf4 TodayTab\cf3 (\{ coordinates \}) \{\line     \cf1 const \cf3 [forecasts\cf1 , \cf3 setForecasts] = \cf4 useState\cf3 ([])\cf1 ;\line     const \cf3 [error\cf1 , \cf3 toggleError] = \cf4 useState\cf3 (\cf1 false\cf3 )\cf1 ;\line     const \cf3 [loading\cf1 , \cf3 toggleLoading] = \cf4 useState\cf3 (\cf1 false\cf3 )\cf1 ;\line\line     \cf4 useEffect\cf3 (() => \{\line         \cf1 async function \cf4 fetchData\cf3 () \{\line             toggleError(\cf1 false\cf3 )\cf1 ;\line             \cf3 toggleLoading(\cf1 true\cf3 )\cf1 ;\line\line             try \cf3\{\line                 \cf1 const \cf3 result = \cf1 await \cf3 axios.\cf4 get\cf3 (\cf5 `https://api.openweathermap.org/data/2.5/onecall?lat=\cf3 $\{coordinates.lat\}\cf5 &lon=\cf3 $\{coordinates.lon\}\cf5 &exclude=minutely,current,daily&appid=\cf3 $\{apiKey\}\cf5 `\cf3 )\cf1 ;\line                 \cf3 setForecasts([\line                     result.\cf2 data\cf3 .hourly[\cf10 3\cf3 ]\cf1 ,\line                     \cf3 result.\cf2 data\cf3 .hourly[\cf10 5\cf3 ]\cf1 ,\line                     \cf3 result.\cf2 data\cf3 .hourly[\cf10 7\cf3 ]\cf1 ,\line                 \cf3 ])\cf1 ;\line                 \cf2\b\i console\cf3\b0\i0 .\cf4 log\cf3 (result.\cf2 data\cf3 )\cf1 ;\line             \cf3\} \cf1 catch \cf3 (e) \{\line                 \cf2\b\i console\cf3\b0\i0 .\cf4 error\cf3 (e)\cf1 ;\line                 \cf3 toggleError(\cf1 true\cf3 )\cf1 ;\line             \cf3\}\line\line             toggleLoading(\cf1 false\cf3 )\cf1 ;\line         \cf3\}\line\line         \cf1 if \cf3 (coordinates) \{\line             \cf4 fetchData\cf3 ()\cf1 ;\line         \cf3\}\line\line     \}\cf1 , \cf3 [coordinates])\cf1 ;\line\line     return \cf3 (\line         \cf7 <div \cf8 className\cf5 ="tab-wrapper"\cf7 >\line             <div \cf8 className\cf5 ="chart"\cf7 >\line          \cf0\highlight6        \{forecasts.map((forecast) => \{\line\cf3\highlight0                    \cf0\highlight6  return <WeatherDetail\line                         key=\{forecast.dt\}\line                         temp=\{forecast.temp\}\line                         type=\{forecast.weather[0].main\}\line                         description=\{forecast.weather[0].description\}\line                     />\line\cf7\highlight0                 \cf3\})\}\line             \cf7 </div>\line             <div \cf8 className\cf5 ="legend"\cf7 >\line                 \cf3\{forecasts.\cf4 map\cf3 ((forecast) => \{\line                     \cf1 return \cf7 <span \cf8 key\cf5 =\cf3\{\cf5 `\cf3 $\{forecast.\cf2 dt\cf3\}\cf5 -timestamp`\cf3\}\cf7 >\cf3\{createTimeString(forecast.\cf2 dt\cf3 )\}\cf7 </span>\line                 \cf3\})\}\line             \cf7 </div>\line             \cf3\{error && \cf7 <span>\cf3 Het ophalen van de voorspellingen is mislukt. Probeer het opnieuw.\cf7 </span>\cf3\}\line             \{loading && (\cf7 <span>\cf3 Loading...\cf7 </span>\cf3 )\}\line         \cf7 </div>\line     \cf3 )\cf1 ;\line\cf3\}\line\line\cf1 export default \cf4 TodayTab\cf1 ;\par
\cf0\f0\fs22 01 - Import and use the WeatherDetail component\line 02 - MAP() en Loop over forecasts\line 03 - Add map-argument RETURN WeatherDetail\line 04 - Pass type property to the WeatherDetail-component\line 05 - Pass description property to the WeatherDetail-component\line 06 - Pass unique key property to the WeatherDetail-component\line\line 07 - Replace dummy timestamps with real timestamps\line 08 - Add key to timestamps in map\line 09 - Implement createTimeString function\line 10 - Use createTimeString function in TodayTab.js\line HIER NOGMAALS HET STUK CODE OVER TIMESTAMPS:\line\cf7\f1\fs20  <div \cf8 className\cf5 ="legend"\cf7 >\line                 \cf3\{forecasts.\cf4 map\cf3 ((forecast) => \{\line                     \cf1 return \cf7 <span \cf8 key\cf5 =\cf3\{\cf5 `\cf3 $\{forecast.\cf2 dt\cf3\}\cf5 -timestamp`\cf3\}\cf7 >\cf3\{createTimeString(forecast.\cf2 dt\cf3 )\}\cf7 </span>\line                 \cf3\})\}\line             \cf7 </div>\cf0\f0\fs22\line 11 - Implement loading and error messages in UI\line\line\b STAP 9.5 - HELPERS IN ForecastTab.JS IMPLEMENTEREN:\line ---\line\cf1\b0\f1\fs20 import \cf2\b\i React\cf1\b0\i0 , \cf3\{ \cf4 useState\cf1 , \cf4 useEffect \cf3\} \cf1 from \cf5 'react'\cf1 ;\line import \cf3 axios \cf1 from \cf5 'axios'\cf1 ;\line\cf0\highlight6 import kelvinToCelsius from '../../helpers/kelvinToCelsius';\line import createDateString from '../../helpers/createDateString';\line\cf1\highlight0 import \cf5 './ForecastTab.css'\cf1 ;\line\line const \cf3 apiKey = \cf5 'plaats jouw unieke API key hier'\cf1 ;\line\line function \cf4 ForecastTab\cf3 (\{ coordinates \}) \{\line     \cf1 const \cf3 [forecasts\cf1 , \cf3 setForecasts] = \cf4 useState\cf3 ([])\cf1 ;\line     const \cf3 [error\cf1 , \cf3 toggleError] = \cf4 useState\cf3 (\cf1 false\cf3 )\cf1 ;\line     const \cf3 [loading\cf1 , \cf3 toggleLoading] = \cf4 useState\cf3 (\cf1 false\cf3 )\cf1 ;\line\line     \cf4 useEffect\cf3 (() => \{\line         \cf1 async function \cf4 fetchData\cf3 () \{\line             toggleError(\cf1 false\cf3 )\cf1 ;\line             \cf3 toggleLoading(\cf1 true\cf3 )\cf1 ;\line\line             try \cf3\{\line                 \cf1 const \cf3 result = \cf1 await \cf3 axios.\cf4 get\cf3 (\cf5 `https://api.openweathermap.org/data/2.5/onecall?lat=\cf3 $\{coordinates.lat\}\cf5 &lon=\cf3 $\{coordinates?.lon\}\cf5 &exclude=minutely,current,hourly&appid=\cf3 $\{apiKey\}\cf5 &lang=nl`\cf3 )\cf1 ;\line                 \cf2\b\i console\cf3\b0\i0 .\cf4 log\cf3 (result.\cf2 data\cf3 )\cf1 ;\line                 \cf3 setForecasts(result.\cf2 data\cf3 .daily.\cf4 slice\cf3 (\cf10 1\cf1 , \cf10 6\cf3 ))\cf1 ;\line             \cf3\} \cf1 catch \cf3 (e) \{\line                 \cf2\b\i console\cf3\b0\i0 .\cf4 error\cf3 (e)\cf1 ;\line                 \cf3 toggleError(\cf1 true\cf3 )\cf1 ;\line             \cf3\}\line             toggleLoading(\cf1 false\cf3 )\cf1 ;\line         \cf3\}\line\line         \cf1 if \cf3 (coordinates) \{\line             \cf4 fetchData\cf3 ()\cf1 ;\line         \cf3\}\line     \}\cf1 , \cf3 [coordinates])\cf1 ;\line\line     return \cf3 (\line         \cf7 <div \cf8 className\cf5 ="tab-wrapper"\cf7 >\line             \cf3\{error && \cf7 <span>\cf3 Er is iets misgegaan met het ophalen van de data\cf7 </span>\cf3\}\line             \{loading && \cf7 <span>\cf3 Loading...\cf7 </span>\cf3\}\line             \{forecasts.\cf2 length \cf3 === \cf10 0 \cf3 && !error &&\line             \cf7 <span \cf8 className\cf5 ="no-forecast"\cf7 >\line           \cf3 Zoek eerst een locatie om het weer voor deze week te bekijken\line         \cf7 </span>\line             \cf3\}\line             \{forecasts.\cf4 map\cf3 ((day) => \{\line                 \cf1 return \cf3 (\line                     \cf7 <article \cf8 className\cf5 ="forecast-day" \cf8 key\cf5 =\cf3\{day.\cf2 dt\cf3\}\cf7 >\line                         <p \cf8 className\cf5 ="day-description"\cf7 >\line                             \cf0\highlight6\{createDateString(day.dt)\}\line\cf3\highlight0                         \cf7 </p>\line\line                         <section \cf8 className\cf5 ="forecast-weather"\cf7 >\line             <span>\line               \cf0\highlight6\{kelvinToCelsius(day.temp.day)\}\cf3\highlight0\line             \cf7 </span>\line                             <span \cf8 className\cf5 ="weather-description"\cf7 >\line               \cf3\{day.weather[\cf10 0\cf3 ].\cf2 description\cf3\}\line             \cf7 </span>\line                         </section>\line                     </article>\line                 \cf3 )\cf1 ;\line             \cf3\})\}\line         \cf7 </div>\line     \cf3 )\cf1 ;\line\cf3\}\line\line\cf1 export default \cf4 ForecastTab\cf1 ;\par
\cf0\b\f0\fs22 STAP 9.6 - HELPERS IN App.JS IMPLEMENTEREN:\line ---\line\line\cf1\b0\f1\fs20 import \cf2\b\i React\cf1\b0\i0 , \cf3\{ \cf4 useState\cf1 , \cf4 useEffect \cf3\} \cf1 from \cf5 'react'\cf1 ;\line import \cf3\{\line     BrowserRouter \cf1 as \cf3 Router\cf1 ,\line     \cf3 Switch\cf1 ,\line     \cf3 Route\cf1 ,\line\cf3\} \cf1 from \cf5 'react-router-dom'\cf1 ;\line import \cf3 axios \cf1 from \cf5 'axios'\cf1 ;\line import \cf3 SearchBar \cf1 from \cf5 './components/searchBar/SearchBar'\cf1 ;\line import \cf3 TabBarMenu \cf1 from \cf5 './components/tabBarMenu/TabBarMenu'\cf1 ;\line import \cf3 MetricSlider \cf1 from \cf5 './components/metricSlider/MetricSlider'\cf1 ;\line import \cf3 ForecastTab \cf1 from \cf5 './pages/forecastTab/ForecastTab'\cf1 ;\line\cf0\highlight6 import TodayTab from './pages/todayTab/TodayTab';\line import kelvinToCelsius from './helpers/kelvinToCelsius';\line\cf1\highlight0 import \cf5 './App.css'\cf1 ;\line\line const \cf3 apiKey = \cf5 'plaats jouw unieke API key hier'\cf1 ;\line\line function \cf3 App() \{\line     \cf1 const \cf3 [weatherData\cf1 , \cf3 setWeatherData] = useState(\{\})\cf1 ;\line     const \cf3 [location\cf1 , \cf3 setLocation] = useState(\cf5 ''\cf3 )\cf1 ;\line     const \cf3 [error\cf1 , \cf3 toggleError] = useState(\cf1 false\cf3 )\cf1 ;\line\line     \cf3 useEffect(() => \{\line         \cf1 async function \cf3 fetchData() \{\line             toggleError(\cf1 false\cf3 )\cf1 ;\line\line             try \cf3\{\line                 \cf1 const \cf3 result = \cf1 await \cf3 axios.get(\cf5 `https://api.openweathermap.org/data/2.5/weather?q=\cf3 $\{location\}\cf5 ,nl&appid=\cf3 $\{apiKey\}\cf5 &lang=nl`\cf3 )\cf1 ;\line                 \cf3 console.log(result.data)\cf1 ;\line                 \cf3 setWeatherData(result.data)\cf1 ;\line             \cf3\} \cf1 catch \cf3 (e) \{\line                 console.error(e)\cf1 ;\line                 \cf3 toggleError(\cf1 true\cf3 )\cf1 ;\line             \cf3\}\line         \}\line\line         \cf1 if \cf3 (location) \{\line             fetchData()\cf1 ;\line         \cf3\}\line     \}\cf1 , \cf3 [location])\cf1 ;\line\line     return \cf3 (\line         \cf7 <>\line             <div \cf8 className\cf5 ="weather-container"\cf7 >\line\line                 \cf3\{\cf9 /*HEADER -------------------- */\cf3\}\line                 \cf7 <div \cf8 className\cf5 ="weather-header"\cf7 >\line                     <SearchBar \cf8 setLocationHandler\cf5 =\cf3\{setLocation\}\cf7 />\line                     \cf3\{error &&\line                     \cf7 <span \cf8 className\cf5 ="wrong-location-error"\cf7 >\line               \cf3 Oeps! Deze locatie bestaat niet\line             \cf7 </span>\line                     \cf3\}\line\line                     \cf7 <span \cf8 className\cf5 ="location-details"\cf7 >\line             \cf3\{Object.keys(weatherData).length > \cf10 0 \cf3 &&\line             \cf7 <>\line                 <h2>\cf3\{weatherData.weather[\cf10 0\cf3 ].description\}\cf7 </h2>\line                 <h3>\cf3\{weatherData.name\}\cf7 </h3>\line            \cf0\highlight6      <h1>\{kelvinToCelsius(weatherData.main.temp)\}</h1>\line\cf7\highlight0             </>\line             \cf3\}\line           \cf7 </span>\line                 </div>\line\line                 \cf3\{\cf9 /*CONTENT ------------------ */\cf3\}\line                 \cf7 <Router>\line                     <div \cf8 className\cf5 ="weather-content"\cf7 >\line                         <TabBarMenu/>\line\line                         \cf0\highlight6 <div className="tab-wrapper">\line                             <Switch>\line                                 <Route path="/komende-week">\line                                     <ForecastTab coordinates=\{weatherData.coord\}/>\line                                 </Route>\line                                 <Route path="/" exact>\line                                     <TodayTab coordinates=\{weatherData.coord\}/>\line                                 </Route>\line                             </Switch>\line                         </div>\line\cf7\highlight0                     </div>\line                 </Router>\line\line                 <MetricSlider/>\line             </div>\line         </>\line     \cf3 )\cf1 ;\line\cf3\}\line\line\cf1 export default \cf4 App\cf1 ;\line\cf0\b\f0\fs22\line\b0 01 - Add forecasttab route\line 02 - Add todaytab route\line 03 - Import and add TodayTab.js component\line 04 - Implement kelvinToCelsius function\line 05 - Pass coordinates as props from App.js\line\b\line\b0\line\ul\b\fs28 STAP 10: COMPONENT MAPPER BOUWEN\ulnone\b0\fs22\line\b STAP 10.1 - ICON MAPPER HELPER iconMapper.JS :\line ---\line\line\cf1\b0\f1\fs20 import \cf2\b\i React \cf1\b0\i0 from \cf5 'react'\cf1 ;\line import \cf3\{ ReactComponent \cf1 as \cf3 Sunny \} \cf1 from \cf5 '../assets/icons/sun.svg'\cf1 ;\line import \cf3\{ ReactComponent \cf1 as \cf3 Rain \} \cf1 from \cf5 '../assets/icons/rain.svg'\cf1 ;\line import \cf3\{ ReactComponent \cf1 as \cf3 Clouds \} \cf1 from \cf5 '../assets/icons/clouds.svg'\cf1 ;\line import \cf3\{ ReactComponent \cf1 as \cf3 Snow \} \cf1 from \cf5 '../assets/icons/snow.svg'\cf1 ;\line import \cf3\{ ReactComponent \cf1 as \cf3 Wind \} \cf1 from \cf5 '../assets/icons/wind.svg'\cf1 ;\line import \cf3\{ ReactComponent \cf1 as \cf3 Drizzle \} \cf1 from \cf5 '../assets/icons/sun-rain.svg'\cf1 ;\line\line function \cf4 iconMapper\cf3 (weatherType) \{\line     \cf1 switch \cf3 (weatherType) \{\line         \cf1 case \cf5 'Clear'\cf3 :\line             \cf1 return \cf7 <Sunny/>\cf1 ;\line         case \cf5 'Clouds'\cf3 :\line             \cf1 return \cf7 <Clouds/>\cf1 ;\line         case \cf5 'Drizzle'\cf3 :\line             \cf1 return \cf7 <Drizzle/>\cf1 ;\line         case \cf5 'Rain'\cf3 :\line             \cf1 return \cf7 <Rain/>\cf1 ;\line         case \cf5 'Snow'\cf3 :\line             \cf1 return \cf7 <Snow/>\cf1 ;\line         case \cf5 'Mist'\cf3 :\line         \cf1 case \cf5 'Haze'\cf3 :\line         \cf1 case \cf5 'Smoke'\cf3 :\line         \cf1 case \cf5 'Fog'\cf3 :\line         \cf1 default\cf3 :\line             \cf1 return \cf7 <Wind/>\cf1 ;\line     \cf3\}\line\}\line\line\cf1 export default \cf4 iconMapper\cf1 ;\par
\cf0\f0\fs22 01 - Create iconmapper.js helper and import react into the file\line 02 - Import all svg's as react components\line 03 - Write function that expects a weathertype\line 04 - Create switch statement\line 05 - Create cases\line 06 - Create default cases\line\line\b STAP 10.2 - IMPLEMENT ICON MAPPER HELPER IN WEATHERDETAIL.JS  :\line ---\line\line\cf1\b0\f1\fs20 import \cf2\b\i React \cf1\b0\i0 from \cf5 'react'\cf1 ;\line import \cf5 './WeatherDetail.css'\cf1 ;\line import \cf3 kelvinToCelsius \cf1 from \cf5 '../../helpers/kelvinToCelsius'\cf1 ;\line import \cf3 iconMapper \cf1 from \cf5 '../../helpers/iconMapper'\cf1 ;\line\line function \cf4 WeatherDetail\cf3 (\{ description\cf1 , \cf3 temp\cf1 , \cf3 type \}) \{\line     \cf1 return \cf3 (\line         \cf7 <section \cf8 className\cf5 ="day-part"\cf7 >\line       <span \cf8 className\cf5 ="icon-wrapper"\cf7 >\line         \cf3\{iconMapper(type)\}\line       \cf7 </span>\line             <p \cf8 className\cf5 ="description"\cf7 >\cf3\{description\}\cf7 </p>\line             <p>\cf3\{kelvinToCelsius(temp)\}\cf7 </p>\line         </section>\line     \cf3 )\cf1 ;\line\cf3\}\line\line\cf1 export default \cf3 WeatherDetail\cf1 ;\line\cf0\b\f0\fs22\line\b0 01 - Import iconmapper into WeatherDetail\line 02 - Use iconmapper for icon\par
}
 