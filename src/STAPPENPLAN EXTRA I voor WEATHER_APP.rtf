{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang2057{\fonttbl{\f0\fnil\fcharset0 Calibri;}{\f1\fmodern JetBrains Mono;}}
{\colortbl ;\red204\green120\blue50;\red152\green118\blue170;\red106\green135\blue89;\red255\green198\blue109;\red169\green183\blue198;\red232\green191\blue106;\red186\green186\blue186;\red0\green0\blue255;\red192\green192\blue192;\red128\green128\blue128;\red109\green156\blue190;\red104\green151\blue187;\red165\green165\blue165;}
{\*\generator Riched20 10.0.19041}\viewkind4\uc1 
\pard\box\brdrdash\brdrw0 \sa200\sl276\slmult1\b\f0\fs28\lang9 STAPPENPLAN EXTRA voor WEATHER_APP\line ---------------------------------------------------\line\ul STAP 1:\ulnone\b0\fs22\line\b STAP 1.1 - INITIALIZE PROJECT USING CREATE REACT APP :\line ---\line\cf1\b0\f1\fs20 import \cf2\b\i logo \cf1\b0\i0 from \cf3 './logo.svg'\cf1 ;\line import \cf3 './App.css'\cf1 ;\line\line function \cf4 App\cf5 () \{\line   \cf1 return \cf5 (\line\line       \cf6 <div \cf7 className\cf3 ="App"\cf6 >\line         <header \cf7 className\cf3 ="App-header"\cf6 >\line           <img \cf7 src\cf3 =\cf5\{\cf2\b\i logo\cf5\b0\i0\} \cf7 className\cf3 ="App-logo" \cf7 alt\cf3 ="logo" \cf6 />\line           <p>\line             \cf5 Edit \cf6 <code>\cf5 src/App.js\cf6 </code> \cf5 and save to reload.\line           \cf6 </p>\line           <a\line               \cf7 className\cf3 ="App-link"\line               \cf7 href\cf3 ="{\cf0{\field{\*\fldinst{HYPERLINK https://reactjs.org }}{\fldrslt{https://reactjs.org\ul0\cf0}}}}\f1\fs20 "\line               \cf7 target\cf3 ="_blank"\line               \cf7 rel\cf3 ="noopener noreferrer"\line           \cf6 >\line             \cf5 Learn React\line           \cf6 </a>\line         </header>\line       </div>\line   \cf5 )\cf1 ;\line\cf5\}\line\line\cf1 export default \cf4 App\cf1 ;\line\line\cf0\f0\lang2057 >>> DIT IS HOE HET DEFAULT IN REACT STAAT NA - NPM INSTALL \line ---------------------\line\fs22\lang9\line\b STAP 1.2 - SETUP BOILERPLATE :\line ---\fs20\lang2057\line\b0\line\highlight9\f1 import \b\i React \b0\i0 from 'react';\line import SearchBar from './components/searchBar/SearchBar';\line import TabBarMenu from './components/tabBarMenu/TabBarMenu';\line import MetricSlider from './components/metricSlider/MetricSlider';\line\cf1\highlight0 import \cf3 './App.css'\cf1 ;\line\line function \cf4 App\cf5 () \{\line   \cf1 return \cf5 (\line       \cf0\highlight9 <>\line         <div className="weather-container">\line\line           \{/*HEADER -------------------- */\}\line           <div className="weather-header">\line             <SearchBar />\line\line             <button\line                 type="button"\line                 onClick=\{() => \b\i console\b0\i0 .log('Ik werk nog niet!')\}\line             >\line               Haal data op!\line             </button>\line           </div>\line\line           \{/*CONTENT ------------------ */\}\line           <div className="weather-content">\line             <TabBarMenu />\line\line             <div className="tab-wrapper">\line               Alle inhoud van de tabbladen komt hier!\line             </div>\line           </div>\line\line           <MetricSlider />\line         </div>\line       </>\line\cf6\highlight0   \cf5 )\cf1 ;\line\cf5\}\line\line\cf1 export default \cf4 App\cf1 ;\par
\cf0\f0 >>> WE HEBBEN EERST DE RETURN ( GEMAAKT EN DAARIN ONZE COMPONENTEN GEPLAATST\line ---------------------\line\line\b\fs22\lang9 STAP 1.3 -  <SPAN> :\line ---\line\b0\fs20\lang2057\line\cf1\f1 import \cf2\b\i React \cf1\b0\i0 from \cf3 'react'\cf1 ;\line\cf0\highlight9 import axios from 'axios';\cf1\highlight0\line import \cf4 SearchBar \cf1 from \cf3 './components/searchBar/SearchBar'\cf1 ;\line import \cf4 TabBarMenu \cf1 from \cf3 './components/tabBarMenu/TabBarMenu'\cf1 ;\line import \cf4 MetricSlider \cf1 from \cf3 './components/metricSlider/MetricSlider'\cf1 ;\line import \cf3 './App.css'\cf1 ;\line\line\cf0\highlight9 const apiKey = '7363b6661da4f67fa08160bce5c5c1bd';\cf1\highlight0\line\line function \cf4 App\cf5 () \{\line\line   \cf1 return \cf5 (\line       \cf6 <>\line         <div \cf7 className\cf3 ="weather-container"\cf6 >\line\line           \cf5\{\cf10 /*HEADER -------------------- */\cf5\}\line           \cf6 <div \cf7 className\cf3 ="weather-header"\cf6 >\line             <SearchBar/>\line\line             \cf0\highlight9 <span className="location-details">\line             <h2>Bewolkt</h2>\line             <h3> </h3>\line             <h1>14 &deg;</h1>\line\line             <button type="button">\line               Haal data op!\line             </button>\line           </span>\line\cf6\highlight0           </div>\line\line           \cf5\{\cf10 /*CONTENT ------------------ */\cf5\}\line           \cf6 <div \cf7 className\cf3 ="weather-content"\cf6 >\line             <TabBarMenu/>\line\line             <div \cf7 className\cf3 ="tab-wrapper"\cf6 >\line               \cf5 Alle inhoud van de tabbladen komt hier!\line             \cf6 </div>\line           </div>\line\line           <MetricSlider/>\line         </div>\line       </>\line   \cf5 )\cf1 ;\line\cf5\}\line\line\cf1 export default \cf4 App\cf1 ;\par
\line\cf0\f0 >>> WE HEBBEN AXIOS GEIMPORTEERD,  \line   >> WE HEBBEN WAT DINGEN IN DE<SPAN> AANGEPAST EN \line         ONZE CONST API KEY BOVENAAN GEZET\line         \line ---------------------\line\line\b\fs22\lang9 STAP 1.4 - CREATE ASYNC FUNCTION, CREATE USE-STATE-HOOK :\line ---\fs20\lang2057\line\b0\line\highlight9\f1 import \b\i React\b0\i0 , \{ useState \} from 'react';\cf1\highlight0\line import \cf5 axios \cf1 from \cf3 'axios'\cf1 ;\line import \cf4 SearchBar \cf1 from \cf3 './components/searchBar/SearchBar'\cf1 ;\line import \cf4 TabBarMenu \cf1 from \cf3 './components/tabBarMenu/TabBarMenu'\cf1 ;\line import \cf4 MetricSlider \cf1 from \cf3 './components/metricSlider/MetricSlider'\cf1 ;\line import \cf3 './App.css'\cf1 ;\line\line const \cf5 apiKey = \cf3 'plaats jouw unieke API key hier'\cf1 ;\line\line function \cf4 App\cf5 () \{\line\cf0\highlight9   const [weatherData, setWeatherData] = useState(\{\});\cf1\highlight0\line\line\cf0\highlight9   async function fetchData() \{\line     try \{\line       const result = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=utrecht,nl&appid=$\{apiKey\}&lang=nl`);\line       \b\i console\b0\i0 .log(result.data);\line       setWeatherData(result.data);\line     \} catch(e) \{\line       \b\i console\b0\i0 .error(e);\line     \}\line   \}\line\cf5\highlight0\line   \cf1 return \cf5 (\line       \cf6 <>\line         <div \cf7 className\cf3 ="weather-container"\cf6 >\line\line           \cf5\{\cf10 /*HEADER -------------------- */\cf5\}\line           \cf6 <div \cf7 className\cf3 ="weather-header"\cf6 >\line             <SearchBar/>\line\line             <span \cf7 className\cf3 ="location-details"\cf6 >\line             <h2>\cf5 Bewolkt\cf6 </h2>\line             <h3> </h3>\line             <h1>\cf5 14 \cf11 &deg;\cf6 </h1>\line\line             <button \cf7 type\cf3 ="button" \cf7 onClick\cf3 =\cf5\{\cf4 fetchData\cf5\}\cf6 >\line               \cf5 Haal data op!\line             \cf6 </button>\line           </span>\line           </div>\line\line           \cf5\{\cf10 /*CONTENT ------------------ */\cf5\}\line           \cf6 <div \cf7 className\cf3 ="weather-content"\cf6 >\line             <TabBarMenu/>\line\line             <div \cf7 className\cf3 ="tab-wrapper"\cf6 >\line               \cf5 Alle inhoud van de tabbladen komt hier!\line             \cf6 </div>\line           </div>\line\line           <MetricSlider/>\line         </div>\line       </>\line   \cf5 )\cf1 ;\line\cf5\}\line\line\cf1 export default \cf4 App\cf1 ;\par
\cf0\f0 >>>>> WE HEBBEN EEN ASYNC FUNCTION AANGEMAAKT, \line   >>>> WE HEBBEN AXIOS GET-REQUEST GEMAAKT\line     \fs22\lang9 >>> WE HEBBEN EEN EVENTLISTENER OP <BUTTON> GEZET, \line       >>  WE HEBBEN useState(\{\}) GEIMPORTEERD EN AANGEMAAKT MET DAARIN \line              DESTRUCTURED setWeatherData ,\line          >  WE HEBBEN setWeatherData(result.data); in FUNCTION fetchData() GEZET \line\fs20\lang2057 ---------------------\fs22\lang9\line\line\b STAP 1.5 - CREATE ASYNC FUNCTION, CREATE USE-STATE-HOOK :\line ---\fs20\lang2057\line\b0\line\cf1\f1 import \cf2\b\i React\cf1\b0\i0 , \cf5\{ \cf4 useState \cf5\} \cf1 from \cf3 'react'\cf1 ;\line import \cf5 axios \cf1 from \cf3 'axios'\cf1 ;\line import \cf4 SearchBar \cf1 from \cf3 './components/searchBar/SearchBar'\cf1 ;\line import \cf4 TabBarMenu \cf1 from \cf3 './components/tabBarMenu/TabBarMenu'\cf1 ;\line import \cf4 MetricSlider \cf1 from \cf3 './components/metricSlider/MetricSlider'\cf1 ;\line import \cf3 './App.css'\cf1 ;\line\line const \cf5 apiKey = \cf3 '7363b6661da4f67fa08160bce5c5c1bd'\cf1 ;\line\line function \cf4 App\cf5 () \{\line   \cf1 const \cf5 [weatherData\cf1 , \cf5 setWeatherData] = \cf4 useState\cf5 (\{\})\cf1 ;\line\line   async function \cf4 fetchData\cf5 () \{\line     \cf1 try \cf5\{\line       \cf1 const \cf5 result = \cf1 await \cf5 axios.\cf4 get\cf5 (\cf3 `https://api.openweathermap.org/data/2.5/weather?q=utrecht,nl&appid=\cf5 $\{apiKey\}\cf3 &lang=nl`\cf5 )\cf1 ;\line       \cf2\b\i console\cf5\b0\i0 .\cf4 log\cf5 (result.\cf2 data\cf5 )\cf1 ;\line       \cf5 setWeatherData(result.\cf2 data\cf5 )\cf1 ;\line     \cf5\} \cf1 catch \cf5 (e) \{\line       \cf2\b\i console\cf5\b0\i0 .\cf4 error\cf5 (e)\cf1 ;\line     \cf5\}\line   \}\line\line   \cf1 return \cf5 (\line       \cf6 <>\line         <div \cf7 className\cf3 ="weather-container"\cf6 >\line\line           \cf5\{\cf10 /*HEADER -------------------- */\cf5\}\line           \cf6 <div \cf7 className\cf3 ="weather-header"\cf6 >\line             <SearchBar/>\line\line             \cf0\highlight9 <span className="location-details">\line             \{\b\i Object\b0\i0 .keys(weatherData).length > 0 &&\line             <>\line               <h2>\{weatherData.weather[0].description\}</h2>\line               <h3>\{weatherData.name\}</h3>\line               <h1>\{weatherData.main.temp\}</h1>\line             </>\line             \}\line\cf5\highlight0               \cf6 <button \cf7 type\cf3 ="button" \cf7 onClick\cf3 =\cf5\{\cf4 fetchData\cf5\}\cf6 >\line               \cf5 Haal data op!\line             \cf6 </button>\line           </span>\line           </div>\line\line           \cf5\{\cf10 /*CONTENT ------------------ */\cf5\}\line           \cf6 <div \cf7 className\cf3 ="weather-content"\cf6 >\line             <TabBarMenu/>\line\line             <div \cf7 className\cf3 ="tab-wrapper"\cf6 >\line               \cf5 Alle inhoud van de tabbladen komt hier!\line             \cf6 </div>\line           </div>\line\line           <MetricSlider/>\line         </div>\line       </>\line   \cf5 )\cf1 ;\line\cf5\}\line\line\cf1 export default \cf4 App\cf1 ;\par
\cf0\f0 >>> WE HEBBEN GEZORGD DAT WE weatherData CHECKEN VOORDAT HET GERENDERED WORDT,\line   >> WE HEBBEN OBJECT VAN DATA DIE WE VAN API GEHAALD HEBBEN GEMAAKT EN IN <> </> \line        GEZET OMDAT WE DRIE RESULTS OPHALEN EN ER MAAR \'c9\'c9N IN RETURN MAG\line ---------------------\line\line\b\fs24 STAP 1 - EINDRESULTAAT :\line ---\line\b0\fs20\line\cf1\f1 import \cf2\b\i React\cf1\b0\i0 , \cf5\{ \cf4 useState \cf5\} \cf1 from \cf3 'react'\cf1 ;\line import \cf5 axios \cf1 from \cf3 'axios'\cf1 ;\line import \cf4 SearchBar \cf1 from \cf3 './components/searchBar/SearchBar'\cf1 ;\line import \cf4 TabBarMenu \cf1 from \cf3 './components/tabBarMenu/TabBarMenu'\cf1 ;\line import \cf4 MetricSlider \cf1 from \cf3 './components/metricSlider/MetricSlider'\cf1 ;\line import \cf3 './App.css'\cf1 ;\line\line const \cf5 apiKey = \cf3 '7363b6661da4f67fa08160bce5c5c1bd'\cf1 ;\line\line function \cf4 App\cf5 () \{\line   \cf1 const \cf5 [weatherData\cf1 , \cf5 setWeatherData] = \cf4 useState\cf5 (\{\})\cf1 ;\line\line   async function \cf4 fetchData\cf5 () \{\line     \cf1 try \cf5\{\line       \cf1 const \cf5 result = \cf1 await \cf5 axios.\cf4 get\cf5 (\cf3 `https://api.openweathermap.org/data/2.5/weather?q=utrecht,nl&appid=\cf5 $\{apiKey\}\cf3 &lang=nl`\cf5 )\cf1 ;\line       \cf2\b\i console\cf5\b0\i0 .\cf4 log\cf5 (result.\cf2 data\cf5 )\cf1 ;\line       \cf5 setWeatherData(result.\cf2 data\cf5 )\cf1 ;\line     \cf5\} \cf1 catch \cf5 (e) \{\line       \cf2\b\i console\cf5\b0\i0 .\cf4 error\cf5 (e)\cf1 ;\line     \cf5\}\line   \}\line\line   \cf1 return \cf5 (\line       \cf6 <>\line         <div \cf7 className\cf3 ="weather-container"\cf6 >\line\line           \cf5\{\cf10 /*HEADER -------------------- */\cf5\}\line           \cf6 <div \cf7 className\cf3 ="weather-header"\cf6 >\line             <SearchBar/>\line\line             <span \cf7 className\cf3 ="location-details"\cf6 >\line             \cf5\{\cf2\b\i Object\cf5\b0\i0 .\cf4 keys\cf5 (weatherData).\cf2 length \cf5 > \cf12 0 \cf5 &&\line             \cf6 <>\line               <h2>\cf5\{weatherData.weather[\cf12 0\cf5 ].\cf2 description\cf5\}\cf6 </h2>\line               <h3>\cf5\{weatherData.\cf2 name\cf5\}\cf6 </h3>\line               <h1>\cf5\{weatherData.\cf2 main\cf5 .temp\}\cf6 </h1>\line             </>\line             \cf5\}\line               \cf6 <button \cf7 type\cf3 ="button" \cf7 onClick\cf3 =\cf5\{\cf4 fetchData\cf5\}\cf6 >\line               \cf5 Haal data op!\line             \cf6 </button>\line           </span>\line           </div>\line\line           \cf5\{\cf10 /*CONTENT ------------------ */\cf5\}\line           \cf6 <div \cf7 className\cf3 ="weather-content"\cf6 >\line             <TabBarMenu/>\line\line             <div \cf7 className\cf3 ="tab-wrapper"\cf6 >\line               \cf5 Alle inhoud van de tabbladen komt hier!\line             \cf6 </div>\line           </div>\line\line           <MetricSlider/>\line         </div>\line       </>\line   \cf5 )\cf1 ;\line\cf5\}\line\line\cf1 export default \cf4 App\cf1 ;\par
\cf0\f0 ---------------------\fs22\lang9\line\line\ul\b\fs28 STAP 2:\line\ulnone\b0\fs22\line\b STAP 2.1 - SETUP BOILERPLATE :\line ---\line\fs20\lang2057\line\cf1\b0\f1 import \cf5 React \cf1 from \cf3 'react'\cf1 ;\line import \cf3 './SearchBar.css'\cf1 ;\line\line function \cf4 SearchBar\cf5 () \{\line   \cf1 return \cf5 (\line       \cf6 <form \cf7 className\cf3 ="searchbar"\cf6 >\line         <input\line             \cf7 type\cf3 ="text"\line             \cf7 name\cf3 ="search"\line             \cf7 placeholder\cf3 ="Zoek een stad in Nederland"\line         \cf6 />\line\line         <button \cf7 type\cf3 ="submit"\cf6 >\line           \cf5 Zoek\line         \cf6 </button>\line       </form>\line   \cf5 )\cf1 ;\line\cf5\}\line\line\cf1 export default \cf4 SearchBar\cf1 ;\par
\cf0\f0 >>> DIT IS DE BASIS SYNTAX VOOR HET SEARCHBAR COMPONENT MET INPUT EN ZOEK BUTTON\line ---------------------\line\line  \b\fs22\lang9 STAP 2.2 - SETUP CONTROLLED COMPONENT AND USE-STATE :\line ---\fs20\lang2057\line\line\highlight9\b0\f1 import React, \{ useState \} from 'react';\cf1\highlight0\line import \cf3 './SearchBar.css'\cf1 ;\line\line\cf0\highlight9 function SearchBar() \{\line   const [query, setQuery] = useState('');\line\cf1\highlight0\line\line   return \cf5 (\line       \cf6 <form \cf7 className\cf3 ="searchbar"\cf6 >\line         <input\line             \cf7 type\cf3 ="text"\line             \cf7 name\cf3 ="search"\line     \cf0\highlight9         value=\{query\}\line             onChange=\{(e) => setQuery(e.target.value)\}\line\cf5\highlight0             \cf7 placeholder\cf3 ="Zoek een stad in Nederland"\line         \cf6 />\line\line         <button \cf7 type\cf3 ="submit"\cf6 >\line           \cf5 Zoek\line         \cf6 </button>\line       </form>\line   \cf5 )\cf1 ;\line\cf5\}\line\line\cf1 export default \cf4 SearchBar\cf1 ;\par
\cf0\f0 >>> WE HEBBEN useState GEIMPORTEERD, \line   >> WE HEBBEN EEN useState GEMAAKT, \line     >  WE HEBBEN INPUT ELEMENT TO CONTROLLED COMPONENT GECONVERT ( dit is in de <input> \line         van de <form> waar we value=\{query\} en als we dit veranderen met onChange doen we met \line         setQuery de nieuwe value erin \line ---------------------\line\line  \b\fs22\lang9 STAP 2.3 - SETUP FUNCTION onFormSubmit() :\line ---\line\fs20\lang2057\line\cf1\b0\f1 import \cf5 React\cf1 , \cf5\{ \cf4 useState \cf5\} \cf1 from \cf3 'react'\cf1 ;\line import \cf3 './SearchBar.css'\cf1 ;\line\line\line function \cf4 SearchBar\cf5 () \{\line   \cf1 const \cf5 [query\cf1 , \cf5 setQuery] = \cf4 useState\cf5 (\cf3 ''\cf5 )\cf1 ;\line\line\cf0\highlight9   function onFormSubmit(e) \{\line     e.preventDefault();\line     \b\i console\b0\i0 .log('submitted!')\line   \}\line\cf5\highlight0\line   \cf1 return \cf5 (\line       \cf0\highlight9 <form className="searchbar" onSubmit=\{onFormSubmit\}>\line\cf6\highlight0         <input\line             \cf7 type\cf3 ="text"\line             \cf7 name\cf3 ="search"\line             \cf7 value\cf3 =\cf5\{query\}\line             \cf7 onChange\cf3 =\cf5\{(e) => setQuery(e.\cf2 target\cf5 .\cf2 value\cf5 )\}\line             \cf7 placeholder\cf3 ="Zoek een stad in Nederland"\line         \cf6 />\line\line         <button \cf7 type\cf3 ="submit"\cf6 >\line           \cf5 Zoek\line         \cf6 </button>\line       </form>\line   \cf5 )\cf1 ;\line\cf5\}\line\line\cf1 export default \cf4 SearchBar\cf1 ;\par
\cf0\f0 >>> WE HEBBEN DE FUNCTION onFormSubmit() GEMAAKT\line   >> WE HEBBEN GEZORGD DAT DE PAGE NIET REFRESHED GAAT WORDEN NA SUBMIT\line ---------------------\line\line  \b\fs22\lang9 STAP 2.4 - SETUP JAVA.JS :\line ---\line\line\cf1\b0\f1\fs20 import \cf5 React\cf1 , \cf5\{ \cf4 useState \cf5\} \cf1 from \cf3 'react'\cf1 ;\line import \cf5 axios \cf1 from \cf3 'axios'\cf1 ;\line\cf0\highlight9 import SearchBar from './components/searchBar/SearchBar';\cf1\highlight0\line import \cf4 TabBarMenu \cf1 from \cf3 './components/tabBarMenu/TabBarMenu'\cf1 ;\line import \cf4 MetricSlider \cf1 from \cf3 './components/metricSlider/MetricSlider'\cf1 ;\line import \cf3 './App.css'\cf1 ;\line\line const \cf5 apiKey = \cf3 'plaats jouw unieke API key hier'\cf1 ;\line\line function \cf4 App\cf5 () \{\line   \cf1 const \cf5 [weatherData\cf1 , \cf5 setWeatherData] = \cf4 useState\cf5 (\{\})\cf1 ;\line   \cf0\highlight9 const [location, setLocation] = useState('');\cf1\highlight0\line\line   async function \cf4 fetchData\cf5 () \{\line     \cf1 try \cf5\{\line       \cf1 const \cf5 result = \cf1 await \cf5 axios.\cf4 get\cf5 (\cf3 `https://api.openweathermap.org/data/2.5/weather?q=utrecht,nl&appid=\cf5 $\{apiKey\}\cf3 &lang=nl`\cf5 )\cf1 ;\line       \cf2\b\i console\cf5\b0\i0 .\cf4 log\cf5 (result.\cf2 data\cf5 )\cf1 ;\line       \cf5 setWeatherData(result.\cf2 data\cf5 )\cf1 ;\line     \cf5\} \cf1 catch \cf5 (e) \{\line       \cf2\b\i console\cf5\b0\i0 .\cf4 error\cf5 (e)\cf1 ;\line     \cf5\}\line   \}\line\line   \cf1 return \cf5 (\line       \cf6 <>\line         <div \cf7 className\cf3 ="weather-container"\cf6 >\line\line           \cf5\{\cf10 /*HEADER -------------------- */\cf5\}\line           \cf6 <div \cf7 className\cf3 ="weather-header"\cf6 >\line             \cf0\highlight9 <SearchBar setLocationHandler=\{setLocation\} />\line\cf6\highlight0\line             <span \cf7 className\cf3 ="location-details"\cf6 >\line             \cf5\{\cf2\b\i Object\cf5\b0\i0 .\cf4 keys\cf5 (weatherData).\cf2 length \cf5 > \cf12 0 \cf5 &&\line             \cf6 <>\line               <h2>\cf5\{weatherData.weather[\cf12 0\cf5 ].\cf2 description\cf5\}\cf6 </h2>\line               <h3>\cf5\{weatherData.\cf2 name\cf5\}\cf6 </h3>\line               <h1>\cf5\{weatherData.\cf2 main\cf5 .temp\}\cf6 </h1>\line             </>\line             \cf5\}\line               \cf6 <button \cf7 type\cf3 ="button" \cf7 onClick\cf3 =\cf5\{\cf4 fetchData\cf5\}\cf6 >\line               \cf5 Haal data op!\line             \cf6 </button>\line           </span>\line           </div>\line\line           \cf5\{\cf10 /*CONTENT ------------------ */\cf5\}\line           \cf6 <div \cf7 className\cf3 ="weather-content"\cf6 >\line             <TabBarMenu/>\line\line             <div \cf7 className\cf3 ="tab-wrapper"\cf6 >\line               \cf5 Alle inhoud van de tabbladen komt hier!\line             \cf6 </div>\line           </div>\line\line           <MetricSlider/>\line         </div>\line       </>\line   \cf5 )\cf1 ;\line\cf5\}\line\line\cf1 export default \cf4 App\cf1 ;\par
\cf0\f0\lang2057 >>> WE HEBBEN EEN USE-STATE VOOR LOCATION (EN SETLOCATION) GEMAAKT IN APP.JS\line   >> WE HEBBEN SETLOCATION IN SEARCHBAR COMPONENT CALLBACK GEZET ZODAT WE IN APP.JS\line         DE DATA UIT SEARCHBAR.JS KUNNEN GEBRUIKEN\b\line\b0 ---------------------\line\line  \b\fs22\lang9 STAP 2.5 - SETUP JAVA.JS :\line ---\line\line\cf1\b0\f1\fs20 import \cf5 React\cf1 , \cf5\{ \cf4 useState \cf5\} \cf1 from \cf3 'react'\cf1 ;\line import \cf3 './SearchBar.css'\cf1 ;\line\line\cf10 // Added state variable location to App.js\line // Passed state-setter-function as callback prop to SearchBar in App.js\line\line\cf0\highlight9 function SearchBar(\{ setLocationHandler \}) \{\line\cf5\highlight0   \cf1 const \cf5 [query\cf1 , \cf5 setQuery] = \cf4 useState\cf5 (\cf3 ''\cf5 )\cf1 ;\line\line   function \cf4 onFormSubmit\cf5 (e) \{\line     e.\cf4 preventDefault\cf5 ()\cf1 ;\line     \cf2\b\i console\cf5\b0\i0 .\cf4 log\cf5 (\cf3 'submitted!'\cf5 )\cf1 ;\line\line     \cf0\highlight9 setLocationHandler(query);\cf1\highlight0\line   \cf5\}\line\line   \cf1 return \cf5 (\line       \cf6 <form \cf7 className\cf3 ="searchbar" \cf7 onSubmit\cf3 =\cf5\{\cf4 onFormSubmit\cf5\}\cf6 >\line         <input\line             \cf7 type\cf3 ="text"\line             \cf7 name\cf3 ="search"\line             \cf7 value\cf3 =\cf5\{query\}\line             \cf7 onChange\cf3 =\cf5\{(e) => setQuery(e.\cf2 target\cf5 .\cf2 value\cf5 )\}\line             \cf7 placeholder\cf3 ="Zoek een stad in Nederland"\line         \cf6 />\line\line         <button \cf7 type\cf3 ="submit"\cf6 >\line           \cf5 Zoek\line         \cf6 </button>\line       </form>\line   \cf5 )\cf1 ;\line\cf5\}\line\line\cf1 export default \cf4 SearchBar\cf1 ;\par
\cf0\f0\fs22 WE HEBBEN GEZORGD DAT SEARCHBAR.JS DE CALLBACK PROP UIT APP.JS KAN GEBRUIKEN\line WE ROEPEN NU SETLOCATIONHANDLER AAN IN ONFORMSUBMIT(E)\line\fs20\lang2057 ---------------------\line\line\b\fs24 STAP 2 - EINDRESULTAAT :\line ---\line\b0\fs20 SearchBar.js:\line\line\cf1\f1 import \cf5 React\cf1 , \cf5\{ \cf4 useState \cf5\} \cf1 from \cf3 'react'\cf1 ;\line import \cf3 './SearchBar.css'\cf1 ;\line\line\cf10 // Added state variable location to App.js\line // Passed state-setter-function as callback prop to SearchBar in App.js\line\line\cf1 function \cf4 SearchBar\cf5 (\{ setLocationHandler \}) \{\line   \cf1 const \cf5 [query\cf1 , \cf5 setQuery] = \cf4 useState\cf5 (\cf3 ''\cf5 )\cf1 ;\line\line   function \cf4 onFormSubmit\cf5 (e) \{\line     e.\cf4 preventDefault\cf5 ()\cf1 ;\line     \cf2\b\i console\cf5\b0\i0 .\cf4 log\cf5 (\cf3 'submitted!'\cf5 )\cf1 ;\line\line     \cf5 setLocationHandler(query)\cf1 ;\line   \cf5\}\line\line   \cf1 return \cf5 (\line       \cf6 <form \cf7 className\cf3 ="searchbar" \cf7 onSubmit\cf3 =\cf5\{\cf4 onFormSubmit\cf5\}\cf6 >\line         <input\line             \cf7 type\cf3 ="text"\line             \cf7 name\cf3 ="search"\line             \cf7 value\cf3 =\cf5\{query\}\line             \cf7 onChange\cf3 =\cf5\{(e) => setQuery(e.\cf2 target\cf5 .\cf2 value\cf5 )\}\line             \cf7 placeholder\cf3 ="Zoek een stad in Nederland"\line         \cf6 />\line\line         <button \cf7 type\cf3 ="submit"\cf6 >\line           \cf5 Zoek\line         \cf6 </button>\line       </form>\line   \cf5 )\cf1 ;\line\cf5\}\line\line\cf1 export default \cf4 SearchBar\cf1 ;\par

\pard\sa200\sl276\slmult1\cf0\b\f0\fs22\lang9 ---\par

\pard\box\brdrdash\brdrw0 \sa200\sl276\slmult1\b0 App.js:\line\line\cf1\f1\fs20 import \cf5 React\cf1 , \cf5\{ \cf4 useState \cf5\} \cf1 from \cf3 'react'\cf1 ;\line import \cf5 axios \cf1 from \cf3 'axios'\cf1 ;\line import \cf4 SearchBar \cf1 from \cf3 './components/searchBar/SearchBar'\cf1 ;\line import \cf4 TabBarMenu \cf1 from \cf3 './components/tabBarMenu/TabBarMenu'\cf1 ;\line import \cf4 MetricSlider \cf1 from \cf3 './components/metricSlider/MetricSlider'\cf1 ;\line import \cf3 './App.css'\cf1 ;\line\line const \cf5 apiKey = \cf3 'plaats jouw unieke API key hier'\cf1 ;\line\line function \cf4 App\cf5 () \{\line   \cf1 const \cf5 [weatherData\cf1 , \cf5 setWeatherData] = \cf4 useState\cf5 (\{\})\cf1 ;\line   const \cf5 [location\cf1 , \cf5 setLocation] = \cf4 useState\cf5 (\cf3 ''\cf5 )\cf1 ;\line\line   async function \cf4 fetchData\cf5 () \{\line     \cf1 try \cf5\{\line       \cf1 const \cf5 result = \cf1 await \cf5 axios.\cf4 get\cf5 (\cf3 `https://api.openweathermap.org/data/2.5/weather?q=utrecht,nl&appid=\cf5 $\{apiKey\}\cf3 &lang=nl`\cf5 )\cf1 ;\line       \cf2\b\i console\cf5\b0\i0 .\cf4 log\cf5 (result.\cf2 data\cf5 )\cf1 ;\line       \cf5 setWeatherData(result.\cf2 data\cf5 )\cf1 ;\line     \cf5\} \cf1 catch \cf5 (e) \{\line       \cf2\b\i console\cf5\b0\i0 .\cf4 error\cf5 (e)\cf1 ;\line     \cf5\}\line   \}\line\line   \cf1 return \cf5 (\line       \cf6 <>\line         <div \cf7 className\cf3 ="weather-container"\cf6 >\line\line           \cf5\{\cf10 /*HEADER -------------------- */\cf5\}\line           \cf6 <div \cf7 className\cf3 ="weather-header"\cf6 >\line             <SearchBar \cf7 setLocationHandler\cf3 =\cf5\{setLocation\} \cf6 />\line\line             <span \cf7 className\cf3 ="location-details"\cf6 >\line             \cf5\{\cf2\b\i Object\cf5\b0\i0 .\cf4 keys\cf5 (weatherData).\cf2 length \cf5 > \cf12 0 \cf5 &&\line             \cf6 <>\line               <h2>\cf5\{weatherData.weather[\cf12 0\cf5 ].\cf2 description\cf5\}\cf6 </h2>\line               <h3>\cf5\{weatherData.\cf2 name\cf5\}\cf6 </h3>\line               <h1>\cf5\{weatherData.\cf2 main\cf5 .temp\}\cf6 </h1>\line             </>\line             \cf5\}\line               \cf6 <button \cf7 type\cf3 ="button" \cf7 onClick\cf3 =\cf5\{\cf4 fetchData\cf5\}\cf6 >\line               \cf5 Haal data op!\line             \cf6 </button>\line           </span>\line           </div>\line\line           \cf5\{\cf10 /*CONTENT ------------------ */\cf5\}\line           \cf6 <div \cf7 className\cf3 ="weather-content"\cf6 >\line             <TabBarMenu/>\line\line             <div \cf7 className\cf3 ="tab-wrapper"\cf6 >\line               \cf5 Alle inhoud van de tabbladen komt hier!\line             \cf6 </div>\line           </div>\line\line           <MetricSlider/>\line         </div>\line       </>\line   \cf5 )\cf1 ;\line\cf5\}\line\line\cf1 export default \cf4 App\cf1 ;\line\line\cf0\f0\lang2057 ---------------------\fs22\lang9\line\line\ul\b\fs28 STAP 3:\line\ulnone\b0\fs22\line\b STAP 3.1 - SETUP USE-EFFECT :\line ---\line\line\b0 App.js:\line\b\line\highlight9\b0\f1\fs20 import \b\i React\b0\i0 , \{ useState, useEffect \} from 'react';\highlight0\line\cf1 import \cf5 axios \cf1 from \cf3 'axios'\cf1 ;\line import \cf4 SearchBar \cf1 from \cf3 './components/searchBar/SearchBar'\cf1 ;\line import \cf4 TabBarMenu \cf1 from \cf3 './components/tabBarMenu/TabBarMenu'\cf1 ;\line import \cf4 MetricSlider \cf1 from \cf3 './components/metricSlider/MetricSlider'\cf1 ;\line import \cf3 './App.css'\cf1 ;\line\line const \cf5 apiKey = \cf3 'plaats jouw unieke API key hier'\cf1 ;\line\line function \cf4 App\cf5 () \{\line     \cf1 const \cf5 [weatherData\cf1 , \cf5 setWeatherData] = \cf4 useState\cf5 (\{\})\cf1 ;\line     const \cf5 [location\cf1 , \cf5 setLocation] = \cf4 useState\cf5 (\cf3 ''\cf5 )\cf1 ;\line\line     \cf0\highlight9 useEffect(() => \{\cf5\highlight0\line         \cf1 async function \cf4 fetchData\cf5 () \{\line             \cf1 try \cf5\{\line                 \cf1 const \cf5 result = \cf1 await \cf5 axios.\cf4 get\cf5 (\cf3 `https://api.openweathermap.org/data/2.5/weather?q=utrecht,nl&appid=\cf5 $\{apiKey\}\cf3 &lang=nl`\cf5 )\cf1 ;\line                 \cf2\b\i console\cf5\b0\i0 .\cf4 log\cf5 (result.\cf2 data\cf5 )\cf1 ;\line                 \cf5 setWeatherData(result.\cf2 data\cf5 )\cf1 ;\line             \cf5\} \cf1 catch \cf5 (e) \{\line                 \cf2\b\i console\cf5\b0\i0 .\cf4 error\cf5 (e)\cf1 ;\line             \cf5\}\line         \}\line\line     \cf0\highlight9\}, []);\cf1\highlight0\line\line\line     return \cf5 (\line         \cf6 <>\line             <div \cf7 className\cf3 ="weather-container"\cf6 >\line\line                 \cf5\{\cf10 /*HEADER -------------------- */\cf5\}\line                 \cf6 <div \cf7 className\cf3 ="weather-header"\cf6 >\line                     <SearchBar \cf7 setLocationHandler\cf3 =\cf5\{setLocation\} \cf6 />\line\line                     <span \cf7 className\cf3 ="location-details"\cf6 >\line             \cf5\{\cf2\b\i Object\cf5\b0\i0 .\cf4 keys\cf5 (weatherData).\cf2 length \cf5 > \cf12 0 \cf5 &&\line             \cf6 <>\line                 <h2>\cf5\{weatherData.weather[\cf12 0\cf5 ].\cf2 description\cf5\}\cf6 </h2>\line                 <h3>\cf5\{weatherData.\cf2 name\cf5\}\cf6 </h3>\line                 <h1>\cf5\{weatherData.\cf2 main\cf5 .temp\}\cf6 </h1>\line             </>\line             \cf5\}\line\highlight9\f0\lang2057                                                                                                                                              \line                                                                                                                                              \highlight0\f1\lang9\line           \cf6 </span>\line                 </div>\line\line                 \cf5\{\cf10 /*CONTENT ------------------ */\cf5\}\line                 \cf6 <div \cf7 className\cf3 ="weather-content"\cf6 >\line                     <TabBarMenu/>\line\line                     <div \cf7 className\cf3 ="tab-wrapper"\cf6 >\line                         \cf5 Alle inhoud van de tabbladen komt hier!\line                     \cf6 </div>\line                 </div>\line\line                 <MetricSlider/>\line             </div>\line         </>\line     \cf5 )\cf1 ;\line\cf5\}\line\line\cf1 export default \cf4 App\cf1 ;\par
\cf0\b\f0\fs22\line\b0 >>> WE HEBBEN ONZE BUTTON WEGGEHAALD\line   >>  WE HEBBEN useEFFECT GEIMPORTEERD\line     >  WE HEBBEN EEN useEffect-hook GECRE\'cbRD\line\line\fs20\lang2057 ---------------------\line\line  \b\fs22\lang9 STAP 3.2 - SETUP JAVA.JS :\line ---\line\b0\line\cf1\f1\fs20 import \cf2\b\i React\cf1\b0\i0 , \cf5\{ \cf4 useState\cf1 , \cf4 useEffect \cf5\} \cf1 from \cf3 'react'\cf1 ;\line import \cf5 axios \cf1 from \cf3 'axios'\cf1 ;\line import \cf4 SearchBar \cf1 from \cf3 './components/searchBar/SearchBar'\cf1 ;\line import \cf4 TabBarMenu \cf1 from \cf3 './components/tabBarMenu/TabBarMenu'\cf1 ;\line import \cf4 MetricSlider \cf1 from \cf3 './components/metricSlider/MetricSlider'\cf1 ;\line import \cf3 './App.css'\cf1 ;\line\line const \cf5 apiKey = \cf3 'plaats jouw unieke API key hier'\cf1 ;\line\line function \cf4 App\cf5 () \{\line     \cf1 const \cf5 [weatherData\cf1 , \cf5 setWeatherData] = \cf4 useState\cf5 (\{\})\cf1 ;\line     const \cf5 [location\cf1 , \cf5 setLocation] = \cf4 useState\cf5 (\cf3 ''\cf5 )\cf1 ;\line\line\cf0\highlight9     useEffect(() => \{\line         async function fetchData() \{\line             try \{\line                 const result = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=$\{location\},nl&appid=$\{apiKey\}&lang=nl`);\line                 \b\i console\b0\i0 .log(result.data);\line                 setWeatherData(result.data);\line             \} catch (e) \{\line                 \b\i console\b0\i0 .error(e);\line             \}\line         \}\line\line         if (location) \{\line             fetchData();\line         \}\line     \}, [location]);\cf1\highlight0\line\line     return \cf5 (\line         \cf6 <>\line             <div \cf7 className\cf3 ="weather-container"\cf6 >\line\line                 \cf5\{\cf10 /*HEADER -------------------- */\cf5\}\line                 \cf6 <div \cf7 className\cf3 ="weather-header"\cf6 >\line                     <SearchBar \cf7 setLocationHandler\cf3 =\cf5\{setLocation\}\cf6 />\line\line                     <span \cf7 className\cf3 ="location-details"\cf6 >\line             \cf5\{\cf2\b\i Object\cf5\b0\i0 .\cf4 keys\cf5 (weatherData).\cf2 length \cf5 > \cf12 0 \cf5 &&\line             \cf6 <>\line                 <h2>\cf5\{weatherData.weather[\cf12 0\cf5 ].\cf2 description\cf5\}\cf6 </h2>\line                 <h3>\cf5\{weatherData.\cf2 name\cf5\}\cf6 </h3>\line                 <h1>\cf5\{weatherData.\cf2 main\cf5 .temp\}\cf6 </h1>\line             </>\line             \cf5\}\line           \cf6 </span>\line                 </div>\line\line                 \cf5\{\cf10 /*CONTENT ------------------ */\cf5\}\line                 \cf6 <div \cf7 className\cf3 ="weather-content"\cf6 >\line                     <TabBarMenu/>\line\line                     <div \cf7 className\cf3 ="tab-wrapper"\cf6 >\line                         \cf5 Alle inhoud van de tabbladen komt hier!\line                     \cf6 </div>\line                 </div>\line\line                 <MetricSlider/>\line             </div>\line         </>\line     \cf5 )\cf1 ;\line\cf5\}\line\line\cf1 export default \cf4 App\cf1 ;\line\cf0\f0\fs22\line\b MAKE REQUEST ENDPOINT DYNAMIC\b0\line >>>>> WE HEBBEN DE fetchData() FUNCTION IN DE useEffect GEZET, ZODAT DEZE WACHT \line             TOT ER EEN UPDATE HEEFT PLAATSGEVONDEN IN SEARCHBAR\line   >>>> WE HEBBEN EEN FUNCTION CALL ONDERAAN useEffect GEZET: fetchData(); ,  \line             ZODRA DE SEARCHBAR DUS GEACTIVEERD WORDT GAAT FUNCTION fetchData();   \line             LOPEN\line     >>> WE HEBBEN ONDERAAN DE useEffect IN DE DEPENDENCY ARRAY  GEZET [location]\line             ZO KRIJGEN WE GEEN INFINITE LOOP EN GAAT IE PAS LOPEN ALS ER IETS IS INGEVULD\line             EN OP ENTER/ZOEK IS GEDRUKT\line       >> WE HEBBEN EEN IF STATEMENT IN DE useEffect GEZET ZODAT IE EEN "TRUTHY" IS \line             ZODAT ER NIET OP EEN LEGE SEARCHBAR EEN fetchData() GEDAAN KAN WORDEN\line         >  WE HEBBEN BIJ DE "GET" EEN DYNAMISCHE \{location\} TOEGEVOEGD\line\line\fs20\lang2057 ---------------------\fs22\lang9\line\line\ul\b\fs28 STAP 4: \ulnone CONDITIONELE PROPERTIES DOORGEVEN FORECASTTAB.JS:\ul\line\ulnone\b0\fs22\line\b STAP 4.1 - SETUP BOILERPLATE:\line ---\line\par
CONDITIONELE PROPERTIES DOORGEVEN FORECASTTAB.JS:\par
\line\cf1\b0\f1\fs20 import \cf2\b\i React \cf1\b0\i0 from \cf3 'react'\cf1 ;\line import \cf3 './ForecastTab.css'\cf1 ;\line\line function \cf4 ForecastTab\cf5 () \{\line     \cf1 return \cf5 (\line         \cf6 <div \cf7 className\cf3 ="tab-wrapper"\cf6 >\line             <article \cf7 className\cf3 ="forecast-day"\cf6 >\line                 <p \cf7 className\cf3 ="day-description"\cf6 >\line                     \cf5 Maandag\line                 \cf6 </p>\line\line                 <section \cf7 className\cf3 ="forecast-weather"\cf6 >\line             <span>\line               \cf5 12\cf11 &deg; \cf5 C\line             \cf6 </span>\line                     <span \cf7 className\cf3 ="weather-description"\cf6 >\line               \cf5 Licht Bewolkt\line             \cf6 </span>\line                 </section>\line             </article>\line\line             <article \cf7 className\cf3 ="forecast-day"\cf6 >\line                 <p \cf7 className\cf3 ="day-description"\cf6 >\line                     \cf5 Maandag\line                 \cf6 </p>\line\line                 <section \cf7 className\cf3 ="forecast-weather"\cf6 >\line             <span>\line               \cf5 12\cf11 &deg; \cf5 C\line             \cf6 </span>\line                     <span \cf7 className\cf3 ="weather-description"\cf6 >\line               \cf5 Licht Bewolkt\line             \cf6 </span>\line                 </section>\line             </article>\line\line             <article \cf7 className\cf3 ="forecast-day"\cf6 >\line                 <p \cf7 className\cf3 ="day-description"\cf6 >\line                     \cf5 Maandag\line                 \cf6 </p>\line\line                 <section \cf7 className\cf3 ="forecast-weather"\cf6 >\line             <span>\line               \cf5 12\cf11 &deg; \cf5 C\line             \cf6 </span>\line                     <span \cf7 className\cf3 ="weather-description"\cf6 >\line               \cf5 Licht Bewolkt\line             \cf6 </span>\line                 </section>\line             </article>\line\line             <article \cf7 className\cf3 ="forecast-day"\cf6 >\line                 <p \cf7 className\cf3 ="day-description"\cf6 >\line                     \cf5 Maandag\line                 \cf6 </p>\line\line                 <section \cf7 className\cf3 ="forecast-weather"\cf6 >\line             <span>\line               \cf5 12\cf11 &deg; \cf5 C\line             \cf6 </span>\line                     <span \cf7 className\cf3 ="weather-description"\cf6 >\line               \cf5 Licht Bewolkt\line             \cf6 </span>\line                 </section>\line             </article>\line\line             <article \cf7 className\cf3 ="forecast-day"\cf6 >\line                 <p \cf7 className\cf3 ="day-description"\cf6 >\line                     \cf5 Maandag\line                 \cf6 </p>\line\line                 <section \cf7 className\cf3 ="forecast-weather"\cf6 >\line             <span>\line               \cf5 12\cf11 &deg; \cf5 C\line             \cf6 </span>\line                     <span \cf7 className\cf3 ="weather-description"\cf6 >\line               \cf5 Licht Bewolkt\line             \cf6 </span>\line                 </section>\line             </article>\line         </div>\line     \cf5 )\cf1 ;\line\cf5\}\cf1 ;\line\line export default \cf4 ForecastTab\cf1 ;\par
\cf0\f0\fs22\lang1033 >>> WE HEBBEN HIER IN ForecastTab.js DE BASIS CODE OPGEZET MET EEN <ARTICLE> VOOR \line         ELKE DAG (WE HEBBEN OP DIT  MOMENT BIJ ELKE DE MAANDAG STAAN\line\fs20\lang2057 ---------------------\line\line  \b\fs22\lang9 STAP 4.2 - CONDITIONELE PROPERTIES DOORGEVEN FORECASTTAB.JS II:\line ---\line\line\highlight9\b0\f1\fs20 import React, \{ useState, useEffect \} from 'react';\line import axios from 'axios';\line\cf1\highlight0 import \cf3 './ForecastTab.css'\cf1 ;\line\line function \cf4 ForecastTab\cf5 (\cf0\highlight9\{ coordinates \}\cf13\highlight0 )\cf0  \cf5\{\line     \cf0\highlight9 const [forecasts, setForecasts] = useState([]);\cf1\highlight0\line\line\cf0\highlight9     useEffect(() => \{\line         // doe dingen!\line     \}, [coordinates]);\line\cf1\highlight0\line     return \cf5 (\line         \cf6 <div \cf7 className\cf3 ="tab-wrapper"\cf6 >\line             <article \cf7 className\cf3 ="forecast-day"\cf6 >\line                 <p \cf7 className\cf3 ="day-description"\cf6 >\line                     \cf5 Maandag\line                 \cf6 </p>\line\line                 <section \cf7 className\cf3 ="forecast-weather"\cf6 >\line             <span>\line               \cf5 12\cf11 &deg; \cf5 C\line             \cf6 </span>\line                     <span \cf7 className\cf3 ="weather-description"\cf6 >\line               \cf5 Licht Bewolkt\line             \cf6 </span>\line                 </section>\line             </article>\line\line             <article \cf7 className\cf3 ="forecast-day"\cf6 >\line                 <p \cf7 className\cf3 ="day-description"\cf6 >\line                     \cf5 Maandag\line                 \cf6 </p>\line\line                 <section \cf7 className\cf3 ="forecast-weather"\cf6 >\line             <span>\line               \cf5 12\cf11 &deg; \cf5 C\line             \cf6 </span>\line                     <span \cf7 className\cf3 ="weather-description"\cf6 >\line               \cf5 Licht Bewolkt\line             \cf6 </span>\line                 </section>\line             </article>\line\line             <article \cf7 className\cf3 ="forecast-day"\cf6 >\line                 <p \cf7 className\cf3 ="day-description"\cf6 >\line                     \cf5 Maandag\line                 \cf6 </p>\line\line                 <section \cf7 className\cf3 ="forecast-weather"\cf6 >\line             <span>\line               \cf5 12\cf11 &deg; \cf5 C\line             \cf6 </span>\line                     <span \cf7 className\cf3 ="weather-description"\cf6 >\line               \cf5 Licht Bewolkt\line             \cf6 </span>\line                 </section>\line             </article>\line\line             <article \cf7 className\cf3 ="forecast-day"\cf6 >\line                 <p \cf7 className\cf3 ="day-description"\cf6 >\line                     \cf5 Maandag\line                 \cf6 </p>\line\line                 <section \cf7 className\cf3 ="forecast-weather"\cf6 >\line             <span>\line               \cf5 12\cf11 &deg; \cf5 C\line             \cf6 </span>\line                     <span \cf7 className\cf3 ="weather-description"\cf6 >\line               \cf5 Licht Bewolkt\line             \cf6 </span>\line                 </section>\line             </article>\line\line             <article \cf7 className\cf3 ="forecast-day"\cf6 >\line                 <p \cf7 className\cf3 ="day-description"\cf6 >\line                     \cf5 Maandag\line                 \cf6 </p>\line\line                 <section \cf7 className\cf3 ="forecast-weather"\cf6 >\line             <span>\line               \cf5 12\cf11 &deg; \cf5 C\line             \cf6 </span>\line                     <span \cf7 className\cf3 ="weather-description"\cf6 >\line               \cf5 Licht Bewolkt\line             \cf6 </span>\line                 </section>\line             </article>\line         </div>\line     \cf5 )\cf1 ;\line\cf5\}\cf1 ;\line\line export default \cf4 ForecastTab\cf1 ;\par
\cf0\f0\fs22 >>>>>> WE HEBBEN BIJ function ForecastTab \{coordinates\} ALS WAARDE MEEGEGEVEN\line   >>>>> WE HEBBEN IN APP.JS BIJ GE\lang2057\'cf\lang9 IMPORTEERDE COMPONENT VAN FORECASTTAB \line                \{COORDINATES\} OPGEVRAAGD, DIE DUS BIJ FORECASTTAB.JS ALS WAARDE \line                GEBRUIKT KAN WORDEN:\par
\cf6\f1\fs20 <div \cf7 className\cf3 ="tab-wrapper"\cf6 >\line     <ForecastTab \cf7 coordinates\cf3 =\cf5\{weatherData.coord\}\cf6 />\line </div>\line </div>\par
\cf0\f0\fs22    >>>>  WE HEBBEN useState GE\'cfMPORTEERD\line      >>>  WE HEBBEN STATE FOR FORECASTS GEINITIEERD\line\highlight9\f1\fs20 const [forecasts, setForecasts] = useState([]);\cf1\highlight0\line\cf0\f0\fs22        >>   WE HEBBEN useEffect GE\'cfMPORTEERD EN GEBRUIKT:\line\highlight9\f1\fs20     useEffect(() => \{\line         // doe dingen!\line     \}, [coordinates]);\line\highlight0\f0\fs22        >   WE HEBBEN AXIOS GE\'cfMPORTEERD\line\fs20\lang2057 ---------------------\line\line  \b\fs22\lang9 STAP 4.3 - CONDITIONELE PROPERTIES DOORGEVEN FORECASTTAB.JS III:\line ---\line\line\b0 >>>>>>>>\b  \b0 WE DECLAREREN ASYNC FUNCTION  BINNEN useEffect\b\line\b0 Declare async function inside useEffect\line\cf5\f1\fs20 useEffect(() => \{\line\cf0\highlight9     async function fetchData() \{\line         try \{\line             const result = await <request-komt-hier>;\line                 \} catch(e) \{\line                     \b\i console\b0\i0 .error(e);\line                 \}\line                 \}\line\cf5\highlight0                 \}, [coordinates]);\line\line\cf0\f0\fs22 >>>>>>>  WE MAKEN EEN CONST VOOR API KEY\cf5\f1\fs20\line\cf0\f0\fs22 Create API-key variable\cf5\f1\fs20\line\cf0\highlight9\f0\fs22 const apiKey = 'plaats jouw unieke API key hier';\cf5\highlight0\f1\fs20\par
\cf0\f0\fs22\line   >>>>>>  WE MAKEN EEN "DUMMY" ENDPOINT EN LOG RESULT IN DE GET\line Use dummy endpoint and log result\line\cf5\f1\fs20 useEffect(() => \{\line     \cf1 async function \cf4 fetchData\cf5 () \{\line         \cf1 try \cf5\{\cf0\highlight9\line             const result = await axios.get(`https://api.openweathermap.org/data/2.5/onecall?lat=$\{VOEG HIER LATITUDE TOE\}&lon=$\{VOEG HIER LONGITUDE TOE\}&exclude=minutely,current,hourly&appid=$\{JOUW API KEY\}&lang=nl`);\line             \b\i console\b0\i0 .log(result.data);\line         \} catch (e) \{\line\cf5\highlight0             \cf2\b\i console\cf5\b0\i0 .\cf4 error\cf5 (e)\cf1 ;\line         \cf5\}\line     \}\line\}\cf1 , \cf5 [coordinates])\cf1 ;\par

\pard\box\brdrdash\brdrw0 \sa200\sl276\slmult1\cf0\f0\fs22\lang1033    \lang9 >>>>>  WE VULLEN NU IN "DUMMY" POINTS DYNAMISCHE DATA IN \{COORDINATES\} \lang1033\line FILL IN DYNAMIC URL\line\cf1\f1\fs20 const \cf2\b\i result \cf5\b0\i0 = \cf1 await \cf5 axios.\cf4 get\cf5 (\cf3 `https://api.openweathermap.org/data/2.5/onecall?lat=\cf5 $\{coordinates.lat\}\cf3 &lon=\cf5 $\{coordinates?.lon\}\cf3 &exclude=minutely,current,hourly&appid=\cf5 $\{apiKey\}\cf3 &lang=nl`\cf5 )\cf1 ;\line\line\cf0\f0\fs22 SAVE RESULT IN STATE\line\cf5\f1\fs20 useEffect(() => \{\line     \cf1 async function \cf4 fetchData\cf5 () \{\line         \cf1 try \cf5\{\line             \cf1 const \cf5 result = \cf1 await \cf5 axios.\cf4 get\cf5 (\cf3 `https://api.openweathermap.org/data/2.5/onecall?lat=\cf5 $\{coordinates.lat\}\cf3 &lon=\cf5 $\{coordinates?.lon\}\cf3 &exclude=minutely,current,hourly&appid=\cf5 $\{apiKey\}\cf3 &lang=nl`\cf5 )\cf1 ;\line             \cf2\b\i console\cf5\b0\i0 .\cf4 log\cf5 (result.\cf2 data\cf5 )\cf1 ;\cf0\highlight9\line             setForecasts(result.data);\line\cf1\highlight0         \cf5\} \cf1 catch \cf5 (e) \{\line             \cf2\b\i console\cf5\b0\i0 .\cf4 error\cf5 (e)\cf1 ;\line         \cf5\}\line     \}\line\}\cf1 , \cf5 [coordinates])\cf1 ;\line\line\cf0\f0\fs22 CALL fetchData WHEN THERE ARE COORDINATES\line\cf5\f1\fs20 useEffect(() => \{\line     \cf1 async function \cf4 fetchData\cf5 () \{\line         \cf1 try \cf5\{\line             \cf1 const \cf5 result = \cf1 await \cf5 axios.\cf4 get\cf5 (\cf3 `https://api.openweathermap.org/data/2.5/onecall?lat=\cf5 $\{coordinates.lat\}\cf3 &lon=\cf5 $\{coordinates?.lon\}\cf3 &exclude=minutely,current,hourly&appid=\cf5 $\{apiKey\}\cf3 &lang=nl`\cf5 )\cf1 ;\line             \cf2\b\i console\cf5\b0\i0 .\cf4 log\cf5 (result.\cf2 data\cf5 )\cf1 ;\line             \cf5 setForecasts(result.\cf2 data\cf5 )\cf1 ;\line         \cf5\} \cf1 catch \cf5 (e) \{\line             \cf2\b\i console\cf5\b0\i0 .\cf4 error\cf5 (e)\cf1 ;\line         \cf5\}\line     \}\cf0\highlight9\line     if (coordinates) \{\line         fetchData();\line     \}\line\cf5\highlight0\}\cf1 , \cf5 [coordinates])\cf1 ;\line\line\cf0\b\f0\fs22\lang9 STAP 4.4 - FORECAST.JS IMPLEMENTEREN IN APP.JS :\line ---\line\cf1\b0\f1\fs20 import \cf2\b\i React\cf1\b0\i0 , \cf5\{ \cf4 useState\cf1 , \cf4 useEffect \cf5\} \cf1 from \cf3 'react'\cf1 ;\line import \cf5 axios \cf1 from \cf3 'axios'\cf1 ;\line import \cf4 SearchBar \cf1 from \cf3 './components/searchBar/SearchBar'\cf1 ;\line import \cf4 TabBarMenu \cf1 from \cf3 './components/tabBarMenu/TabBarMenu'\cf1 ;\line import \cf4 MetricSlider \cf1 from \cf3 './components/metricSlider/MetricSlider'\cf1 ;\line\cf0\highlight9 import ForecastTab from './pages/forecastTab/ForecastTab';\line\cf1\highlight0 import \cf3 './App.css'\cf1 ;\line\line const \cf5 apiKey = \cf3 'plaats jouw unieke API key hier'\cf1 ;\line\line function \cf4 App\cf5 () \{\line     \cf1 const \cf5 [weatherData\cf1 , \cf5 setWeatherData] = \cf4 useState\cf5 (\{\})\cf1 ;\line     const \cf5 [location\cf1 , \cf5 setLocation] = \cf4 useState\cf5 (\cf3 ''\cf5 )\cf1 ;\line\line     \cf4 useEffect\cf5 (() => \{\line         \cf1 async function \cf4 fetchData\cf5 () \{\line             \cf1 try \cf5\{\line                 \cf1 const \cf5 result = \cf1 await \cf5 axios.\cf4 get\cf5 (\cf3 `https://api.openweathermap.org/data/2.5/weather?q=\cf5 $\{location\}\cf3 ,nl&appid=\cf5 $\{apiKey\}\cf3 &lang=nl`\cf5 )\cf1 ;\line                 \cf2\b\i console\cf5\b0\i0 .\cf4 log\cf5 (result.\cf2 data\cf5 )\cf1 ;\line                 \cf5 setWeatherData(result.\cf2 data\cf5 )\cf1 ;\line             \cf5\} \cf1 catch \cf5 (e) \{\line                 \cf2\b\i console\cf5\b0\i0 .\cf4 error\cf5 (e)\cf1 ;\line             \cf5\}\line         \}\line\line         \cf1 if \cf5 (location) \{\line             \cf4 fetchData\cf5 ()\cf1 ;\line         \cf5\}\line     \}\cf1 , \cf5 [location])\cf1 ;\line\line     return \cf5 (\line         \cf6 <>\line             <div \cf7 className\cf3 ="weather-container"\cf6 >\line\line                 \cf5\{\cf10 /*HEADER -------------------- */\cf5\}\line                 \cf6 <div \cf7 className\cf3 ="weather-header"\cf6 >\line                     <SearchBar \cf7 setLocationHandler\cf3 =\cf5\{setLocation\}\cf6 />\line\line                     <span \cf7 className\cf3 ="location-details"\cf6 >\line             \cf5\{\cf2\b\i Object\cf5\b0\i0 .\cf4 keys\cf5 (weatherData).\cf2 length \cf5 > \cf12 0 \cf5 &&\line             \cf6 <>\line                 <h2>\cf5\{weatherData.weather[\cf12 0\cf5 ].\cf2 description\cf5\}\cf6 </h2>\line                 <h3>\cf5\{weatherData.\cf2 name\cf5\}\cf6 </h3>\line                 <h1>\cf5\{weatherData.\cf2 main\cf5 .temp\}\cf6 </h1>\line             </>\line             \cf5\}\line           \cf6 </span>\line                 </div>\line\line                 \cf5\{\cf10 /*CONTENT ------------------ */\cf5\}\line                 \cf6 <div \cf7 className\cf3 ="weather-content"\cf6 >\line                     <TabBarMenu/>\line\line                     <div \cf7 className\cf3 ="tab-wrapper"\cf6 >\line                         \cf0\highlight9 <ForecastTab coordinates=\{weatherData.coord\}/>\line\cf6\highlight0                     </div>\line                 </div>\line\line                 <MetricSlider/>\line             </div>\line         </>\line     \cf5 )\cf1 ;\line\cf5\}\line\line\cf1 export default \cf4 App\cf1 ;\par

\pard\box\brdrdash\brdrw0 \sa200\sl276\slmult1\cf0\b\f0\fs22\line\b0 >>> WE IMPORTEREN HET FORECASTTAB.JS COMPONENT\line   >> WE VERVANGEN HARDCODED TEXT MET HET <FORECASTTAB />COMPONENT\line     >  WE GEVEN COORDINATES MEE AAN <FORECASTTAB /> \line <ForecastTab coordinates=\{weatherData.coord\}/>\line\cf1\f1\fs20\lang1033\line\cf0\f0\lang2057 ---------------------\line\line\ul\b\fs28\lang9 STAP 5: MEERDERE VOORSPELLINGEN weergeven door DATA-ITERATIE\ulnone\b0\fs20\lang2057\line  \b\fs22\lang9 STAP 5.1 - SETUP FORECASTTAB.JS :\line ---\line\cf1\b0\f1\fs20 import \cf5 React\cf1 , \cf5\{ \cf4 useState\cf1 , \cf4 useEffect \cf5\} \cf1 from \cf3 'react'\cf1 ;\line import \cf5 axios \cf1 from \cf3 'axios'\cf1 ;\line import \cf3 './ForecastTab.css'\cf1 ;\line\line const \cf5 apiKey = \cf3 'plaats jouw unieke API key hier'\cf1 ;\line\line function \cf4 ForecastTab\cf5 (\{ coordinates \}) \{\line     \cf1 const \cf5 [forecasts\cf1 , \cf5 setForecasts] = \cf4 useState\cf5 ([])\cf1 ;\line\line     function \cf4 createDateString\cf5 (timestamp) \{\line         \cf1 const \cf5 day = \cf1 new \cf2\b\i Date\cf5\b0\i0 (timestamp * \cf12 1000\cf5 )\cf1 ;\line\line         return \cf5 day.\cf4 toLocaleDateString\cf5 (\cf3 'nl-NL'\cf1 , \cf5\{ \cf2 weekday\cf5 : \cf3 'long' \cf5\})\cf1 ;\line     \cf5\}\line\line     \cf4 useEffect\cf5 (() => \{\line         \cf1 async function \cf4 fetchData\cf5 () \{\line             \cf1 try \cf5\{\line                 \cf1 const \cf5 result = \cf1 await \cf5 axios.\cf4 get\cf5 (\cf3 `https://api.openweathermap.org/data/2.5/onecall?lat=\cf5 $\{coordinates.lat\}\cf3 &lon=\cf5 $\{coordinates?.lon\}\cf3 &exclude=minutely,current,hourly&appid=\cf5 $\{apiKey\}\cf3 &lang=nl`\cf5 )\cf1 ;\line                 \cf2\b\i console\cf5\b0\i0 .\cf4 log\cf5 (result.\cf2 data\cf5 )\cf1 ;\line\cf0\highlight9             setForecasts(result.data.daily.slice(1, 6));\line\cf1\highlight0             \cf5\} \cf1 catch \cf5 (e) \{\line                 \cf2\b\i console\cf5\b0\i0 .\cf4 error\cf5 (e)\cf1 ;\line             \cf5\}\line         \}\line         \cf1 if \cf5 (coordinates) \{\line             \cf4 fetchData\cf5 ()\cf1 ;\line         \cf5\}\line     \}\cf1 , \cf5 [coordinates])\cf1 ;\line\line     return \cf5 (\line         \cf6 <div \cf7 className\cf3 ="tab-wrapper"\cf6 >\line          \cf0\highlight9    \{forecasts.map((day) => \{\line                 return (\line                     <article className="forecast-day">\line                         <p className="day-description">\line                             \{createDateString(day.dt)\}\line                         </p>\line\line                         <section className="forecast-weather">\line             <span>\line               \{day.temp.day\}\line             </span>\line                             <span className="weather-description">\line               \{day.weather[0].description\}\line             </span>\line                         </section>\line                     </article>\line                 );\line             \})\}\line\cf5\highlight0         \cf6 </div>\line     \cf5 )\cf1 ;\line\cf5\}\line\line\cf1 export default \cf4 ForecastTab\cf1 ;\line\line\cf0\f0\fs22 >>>>> WE HALEN HIER DE EERSTE WAARDE UIT DE ARRAY (VANDAAG) EN DE LAATSTE \line              WAARDE UIT DE ARRAY OMDAT WE DE KOMENDE 5 DAGEN ALLEEN WILLEN\b\line\b0 >>> WE ZETTEN DE <ARTICLE>'S IN DE MAP METHODE EN VERWIJDEREN DE BESTAANDE \line              <ARTICLE> ELEMENTEN\line  >> WE ZETTEN NU DYNAMISCHE WAARDEN IN DE <ARTICLE></ARTICLE>\line > WE MAKEN IN <P> DE DYNAMISCHE DATA AAN EN ZORGEN DAT WE GEEN FOUTEN KRIJGEN DOOR DE CLASSNAME VAN <ARTICLE> EEN ID TE GEVEN (KEY)\line\cf1\f1\fs20\par
\cf0\b\f0\fs22 ________________________________________________________________\line WE HALEN HIERONDER DE CODE EVEN UIT ELKAAR :\line\line\b0 >>>>> WE HALEN HIER DE EERSTE WAARDE UIT DE ARRAY (VANDAAG) EN DE LAATSTE \line              WAARDE UIT DE ARRAY OMDAT WE DE KOMENDE 5 DAGEN ALLEEN WILLEN\b\line\b0 Slice unwanted data\line\cf5\f1\fs20 useEffect(() => \{\line     \cf1 async function \cf4 fetchData\cf5 () \{\line         \cf1 try \cf5\{\line             \cf1 const \cf5 result = \cf1 await \cf5 axios.\cf4 get\cf5 (\cf3 `https://api.openweathermap.org/data/2.5/onecall?lat=\cf5 $\{coordinates.lat\}\cf3 &lon=\cf5 $\{coordinates?.lon\}\cf3 &exclude=minutely,current,hourly&appid=\cf5 $\{apiKey\}\cf3 &lang=nl`\cf5 )\cf1 ;\line             \cf2\b\i console\cf5\b0\i0 .\cf4 log\cf5 (result.\cf2 data\cf5 )\cf1 ;\cf0\highlight9\line             setForecasts(result.data.daily.slice(1, 6));\line\cf1\highlight0         \cf5\} \cf1 catch \cf5 (e) \{\line             \cf2\b\i console\cf5\b0\i0 .\cf4 error\cf5 (e)\cf1 ;\line         \cf5\}\line     \}\line     \cf1 if \cf5 (coordinates) \{\line         \cf4 fetchData\cf5 ()\cf1 ;\line     \cf5\}\line\}\cf1 , \cf5 [coordinates])\cf1 ;\par
\cf0\f0\fs22   >>>> WE MAKEN EEN SETUP VOOR GEMAPTE WAARDE MET DAY ERIN \line Set up map method\line\cf1\f1\fs20 return \cf5 (\line     \cf6 <div \cf7 className\cf3 ="tab-wrapper"\cf6 >\cf0\highlight9\line         \{forecasts.map((day) => \{\line             return (\line                 // alle elementen\line             );\line\cf1\highlight0         \cf5\})\}\line\line\f0\lang2057      \cf0\fs22\lang9 >>> WE ZETTEN DE <ARTICLE>'S IN DE MAP METHODE EN VERWIJDEREN DE BESTAANDE \line              <ARTICLE> ELEMENTEN\line Use existing article as base\line Remove all static articles\par
\cf1\f1\fs20 import \cf5 React\cf1 , \cf5\{ \cf4 useState\cf1 , \cf4 useEffect \cf5\} \cf1 from \cf3 'react'\cf1 ;\line import \cf5 axios \cf1 from \cf3 'axios'\cf1 ;\line import \cf3 './ForecastTab.css'\cf1 ;\line\line const \cf5 apiKey = \cf3 'plaats jouw unieke API key hier'\cf1 ;\line\line function \cf4 ForecastTab\cf5 (\{ coordinates \}) \{\line     \cf1 const \cf5 [forecasts\cf1 , \cf5 setForecasts] = \cf4 useState\cf5 ([])\cf1 ;\line\line     \cf4 useEffect\cf5 (() => \{\line         \cf1 async function \cf4 fetchData\cf5 () \{\line             \cf1 try \cf5\{\line                 \cf1 const \cf5 result = \cf1 await \cf5 axios.\cf4 get\cf5 (\cf3 `https://api.openweathermap.org/data/2.5/onecall?lat=\cf5 $\{coordinates.lat\}\cf3 &lon=\cf5 $\{coordinates?.lon\}\cf3 &exclude=minutely,current,hourly&appid=\cf5 $\{apiKey\}\cf3 &lang=nl`\cf5 )\cf1 ;\line                 \cf2\b\i console\cf5\b0\i0 .\cf4 log\cf5 (result.\cf2 data\cf5 )\cf1 ;\line                 \cf5 setForecasts(result.\cf2 data\cf5 .daily.\cf4 slice\cf5 (\cf12 1\cf1 , \cf12 6\cf5 ))\cf1 ;\line             \cf5\} \cf1 catch \cf5 (e) \{\line                 \cf2\b\i console\cf5\b0\i0 .\cf4 error\cf5 (e)\cf1 ;\line             \cf5\}\line         \}\line         \cf1 if \cf5 (coordinates) \{\line             \cf4 fetchData\cf5 ()\cf1 ;\line         \cf5\}\line     \}\cf1 , \cf5 [coordinates])\cf1 ;\cf0\highlight9\line\line     return (\line         <div className="tab-wrapper">\line             \{forecasts.map((day) => \{\line                 return (\line                     <article className="forecast-day">\line                         <p className="day-description">\line                             Maandag\line                         </p>\line\line                         <section className="forecast-weather">\line             <span>\line               12&deg; C\line             </span>\line                             <span className="weather-description">\line               Licht Bewolkt\line             </span>\line                         </section>\line                     </article>\line                 );\line             \})\}\line\cf5\f0\lang2057                                                                                                                \par
                                                                                                               \highlight0\f1\lang9\line\line         \cf6 </div>\line     \cf5 )\cf1 ;\line\cf5\}\line\line\cf1 export default \cf4 ForecastTab\cf1 ;\par
\cf5\f0\lang2057   \cf0\fs22\lang9   >> WE ZETTEN NU DYNAMISCHE WAARDEN IN DE <ARTICLE></ARTICLE>\line Use dynamic values\line\cf1\f1\fs20 return \cf5 (\line     \cf6 <div \cf7 className\cf3 ="tab-wrapper"\cf6 >\line         \cf5\{forecasts.map((day) => \{\line             \cf1 return \cf5 (\line                 \cf6 <article \cf7 className\cf3 ="forecast-day"\cf6 >\line                     <p \cf7 className\cf3 ="day-description"\cf6 >\cf0\highlight9\line                         \{day.dt\}\line\cf5\highlight0                     \cf6 </p>\line\line                     <section \cf7 className\cf3 ="forecast-weather"\cf6 >\line             <span>\cf0\highlight9\line               \{day.temp.day\}\line\cf5\highlight0             \cf6 </span>\line                         <span \cf7 className\cf3 ="weather-description"\cf6 >\cf0\highlight9\line               \{day.weather[0].description\}\line\cf5\highlight0             \cf6 </span>\line                     </section>\line                 </article>\line             \cf5 )\cf1 ;\line         \cf5\})\}\line     \cf6 </div>\line\cf5 )\cf1 ;\line\cf5\}\par
\cf0\f0\fs22 (VOORHEEN STONDEN ER HIER DUS 5(!) ARTICLES MAAR NU KUNNEN WE ALLES MET \'c9\'c9N!\par
> WE MAKEN IN <P> DE DYNAMISCHE DATA AAN EN ZORGEN DAT WE GEEN FOUTEN KRIJGEN DOOR DE CLASSNAME VAN <ARTICLE> EEN ID TE GEVEN (KEY)\line Use formatting function\line\highlight9\f1\fs20\{createDateString(day.dt)\}\highlight0\f0\fs22\line Use key to prevent infinite looping elements\line\highlight9\f1\fs20 key=\{day.dt\}\highlight0\f0\fs22\line\line\cf5\f1\fs20 useEffect(() => \{\line     \cf1 async function \cf4 fetchData\cf5 () \{\line         \cf1 try \cf5\{\line             \cf1 const \cf5 result = \cf1 await \cf5 axios.\cf4 get\cf5 (\cf3 `https://api.openweathermap.org/data/2.5/onecall?lat=\cf5 $\{coordinates.lat\}\cf3 &lon=\cf5 $\{coordinates?.lon\}\cf3 &exclude=minutely,current,hourly&appid=\cf5 $\{apiKey\}\cf3 &lang=nl`\cf5 )\cf1 ;\line             \cf2\b\i console\cf5\b0\i0 .\cf4 log\cf5 (result.\cf2 data\cf5 )\cf1 ;\line             \cf5 setForecasts(result.\cf2 data\cf5 .daily.\cf4 slice\cf5 (\cf12 1\cf1 , \cf12 6\cf5 ))\cf1 ;\line         \cf5\} \cf1 catch \cf5 (e) \{\line             \cf2\b\i console\cf5\b0\i0 .\cf4 error\cf5 (e)\cf1 ;\line         \cf5\}\line     \}\line     \cf1 if \cf5 (coordinates) \{\line         \cf4 fetchData\cf5 ()\cf1 ;\line     \cf5\}\line\}\cf1 , \cf5 [coordinates])\cf1 ;\line\line return \cf5 (\line     \cf6 <div \cf7 className\cf3 ="tab-wrapper"\cf6 >\line         \cf5\{forecasts.\cf4 map\cf5 ((day) => \{\line             \cf1 return \cf5 (\line                 \cf6 <article \cf7 className\cf3 ="forecast-day" \cf0\highlight9 key=\{day.dt\}>\cf6\highlight0\line                     <p \cf7 className\cf3 ="day-description"\cf6 >\line                         \cf0\highlight9\{createDateString(day.dt)\}\line\cf5\highlight0                     \cf6 </p>\line\line                     <section \cf7 className\cf3 ="forecast-weather"\cf6 >\line             <span>\line               \cf5\{day.temp.\cf2 day\cf5\}\line             \cf6 </span>\line                         <span \cf7 className\cf3 ="weather-description"\cf6 >\line               \cf5\{day.weather[\cf12 0\cf5 ].\cf2 description\cf5\}\line             \cf6 </span>\line                     </section>\line                 </article>\line             \cf5 )\cf1 ;\line         \cf5\})\}\line     \cf6 </div>\line\cf5 )\cf1 ;\line\cf5\}\line\line\cf1 export default \cf4 ForecastTab\cf1 ;\par

\pard\box\brdrdash\brdrw0 \sa200\sl276\slmult1\cf0\b\f0\fs28 DUS ForecastTab.js MOET ER ZO UITEINDELIJK UITZIEN :\line\line\cf1\b0\f1\fs20 import \cf2\b\i React\cf1\b0\i0 , \cf5\{ \cf4 useState\cf1 , \cf4 useEffect \cf5\} \cf1 from \cf3 'react'\cf1 ;\line import \cf5 axios \cf1 from \cf3 'axios'\cf1 ;\line import \cf3 './ForecastTab.css'\cf1 ;\line\line const \cf5 apiKey = \cf3 'plaats jouw unieke API key hier'\cf1 ;\line\line function \cf4 ForecastTab\cf5 (\{ coordinates \}) \{\line     \cf1 const \cf5 [forecasts\cf1 , \cf5 setForecasts] = \cf4 useState\cf5 ([])\cf1 ;\line\line     function \cf4 createDateString\cf5 (timestamp) \{\line         \cf1 const \cf5 day = \cf1 new \cf2\b\i Date\cf5\b0\i0 (timestamp * \cf12 1000\cf5 )\cf1 ;\line\line         return \cf5 day.\cf4 toLocaleDateString\cf5 (\cf3 'nl-NL'\cf1 , \cf5\{ \cf2 weekday\cf5 : \cf3 'long' \cf5\})\cf1 ;\line     \cf5\}\line\line     \cf4 useEffect\cf5 (() => \{\line         \cf1 async function \cf4 fetchData\cf5 () \{\line             \cf1 try \cf5\{\line                 \cf1 const \cf5 result = \cf1 await \cf5 axios.\cf4 get\cf5 (\cf3 `https://api.openweathermap.org/data/2.5/onecall?lat=\cf5 $\{coordinates.lat\}\cf3 &lon=\cf5 $\{coordinates?.lon\}\cf3 &exclude=minutely,current,hourly&appid=\cf5 $\{apiKey\}\cf3 &lang=nl`\cf5 )\cf1 ;\line                 \cf2\b\i console\cf5\b0\i0 .\cf4 log\cf5 (result.\cf2 data\cf5 )\cf1 ;\line                 \cf5 setForecasts(result.\cf2 data\cf5 .daily.\cf4 slice\cf5 (\cf12 1\cf1 , \cf12 6\cf5 ))\cf1 ;\line             \cf5\} \cf1 catch \cf5 (e) \{\line                 \cf2\b\i console\cf5\b0\i0 .\cf4 error\cf5 (e)\cf1 ;\line             \cf5\}\line         \}\line         \cf1 if \cf5 (coordinates) \{\line             \cf4 fetchData\cf5 ()\cf1 ;\line         \cf5\}\line     \}\cf1 , \cf5 [coordinates])\cf1 ;\line\line     return \cf5 (\line         \cf6 <div \cf7 className\cf3 ="tab-wrapper"\cf6 >\line             \cf5\{forecasts.\cf4 map\cf5 ((day) => \{\line                 \cf1 return \cf5 (\line                     \cf6 <article \cf7 className\cf3 ="forecast-day" \cf7 key\cf3 =\cf5\{day.\cf2 dt\cf5\}\cf6 >\line                         <p \cf7 className\cf3 ="day-description"\cf6 >\line                             \cf5\{\cf4 createDateString\cf5 (day.\cf2 dt\cf5 )\}\line                         \cf6 </p>\line\line                         <section \cf7 className\cf3 ="forecast-weather"\cf6 >\line             <span>\line               \cf5\{day.temp.\cf2 day\cf5\}\line             \cf6 </span>\line                             <span \cf7 className\cf3 ="weather-description"\cf6 >\line               \cf5\{day.weather[\cf12 0\cf5 ].\cf2 description\cf5\}\line             \cf6 </span>\line                         </section>\line                     </article>\line                 \cf5 )\cf1 ;\line             \cf5\})\}\line         \cf6 </div>\line     \cf5 )\cf1 ;\line\cf5\}\line\line\cf1 export default \cf4 ForecastTab\cf1 ;\par

\pard\box\brdrdash\brdrw0 \sa200\sl276\slmult1\cf0\b\f0\fs28 DUS App.js MOET ER ZO UITEINDELIJK UITZIEN :\b0\fs22\line\line\cf1\f1\fs20 import \cf5 React\cf1 , \cf5\{ \cf4 useState\cf1 , \cf4 useEffect \cf5\} \cf1 from \cf3 'react'\cf1 ;\line import \cf5 axios \cf1 from \cf3 'axios'\cf1 ;\line import \cf4 SearchBar \cf1 from \cf3 './components/searchBar/SearchBar'\cf1 ;\line import \cf4 TabBarMenu \cf1 from \cf3 './components/tabBarMenu/TabBarMenu'\cf1 ;\line import \cf4 MetricSlider \cf1 from \cf3 './components/metricSlider/MetricSlider'\cf1 ;\line import \cf4 ForecastTab \cf1 from \cf3 './pages/forecastTab/ForecastTab'\cf1 ;\line import \cf3 './App.css'\cf1 ;\line\line const \cf5 apiKey = \cf3 'plaats jouw unieke API key hier'\cf1 ;\line\line function \cf4 App\cf5 () \{\line     \cf1 const \cf5 [weatherData\cf1 , \cf5 setWeatherData] = \cf4 useState\cf5 (\{\})\cf1 ;\line     const \cf5 [location\cf1 , \cf5 setLocation] = \cf4 useState\cf5 (\cf3 ''\cf5 )\cf1 ;\line\line     \cf4 useEffect\cf5 (() => \{\line         \cf1 async function \cf4 fetchData\cf5 () \{\line             \cf1 try \cf5\{\line                 \cf1 const \cf5 result = \cf1 await \cf5 axios.\cf4 get\cf5 (\cf3 `https://api.openweathermap.org/data/2.5/weather?q=\cf5 $\{location\}\cf3 ,nl&appid=\cf5 $\{apiKey\}\cf3 &lang=nl`\cf5 )\cf1 ;\line                 \cf2\b\i console\cf5\b0\i0 .\cf4 log\cf5 (result.\cf2 data\cf5 )\cf1 ;\line                 \cf5 setWeatherData(result.\cf2 data\cf5 )\cf1 ;\line             \cf5\} \cf1 catch \cf5 (e) \{\line                 \cf2\b\i console\cf5\b0\i0 .\cf4 error\cf5 (e)\cf1 ;\line             \cf5\}\line         \}\line\line         \cf1 if \cf5 (location) \{\line             \cf4 fetchData\cf5 ()\cf1 ;\line         \cf5\}\line     \}\cf1 , \cf5 [location])\cf1 ;\line\line     return \cf5 (\line         \cf6 <>\line             <div \cf7 className\cf3 ="weather-container"\cf6 >\line\line                 \cf5\{\cf10 /*HEADER -------------------- */\cf5\}\line                 \cf6 <div \cf7 className\cf3 ="weather-header"\cf6 >\line                     <SearchBar \cf7 setLocationHandler\cf3 =\cf5\{setLocation\}\cf6 />\line\line                     <span \cf7 className\cf3 ="location-details"\cf6 >\line             \cf5\{\cf2\b\i Object\cf5\b0\i0 .\cf4 keys\cf5 (weatherData).\cf2 length \cf5 > \cf12 0 \cf5 &&\line             \cf6 <>\line                 <h2>\cf5\{weatherData.weather[\cf12 0\cf5 ].\cf2 description\cf5\}\cf6 </h2>\line                 <h3>\cf5\{weatherData.\cf2 name\cf5\}\cf6 </h3>\line                 <h1>\cf5\{weatherData.\cf2 main\cf5 .temp\}\cf6 </h1>\line             </>\line             \cf5\}\line           \cf6 </span>\line                 </div>\line\line                 \cf5\{\cf10 /*CONTENT ------------------ */\cf5\}\line                 \cf6 <div \cf7 className\cf3 ="weather-content"\cf6 >\line                     <TabBarMenu/>\line\line                     <div \cf7 className\cf3 ="tab-wrapper"\cf6 >\line                         <ForecastTab \cf7 coordinates\cf3 =\cf5\{weatherData.coord\}\cf6 />\line                     </div>\line                 </div>\line\line                 <MetricSlider/>\line             </div>\line         </>\line     \cf5 )\cf1 ;\line\cf5\}\line\line\cf1 export default \cf4 App\cf1 ;\par
\cf0\f0\fs22\line\line\par
\par
\par
\par
\cf1\f1\fs20\lang1033\par
\par
\cf0\f0\fs22\line\cf1\f1\fs20\lang9\par

\pard\sa200\sl276\slmult1\cf0\b\f0\fs22\line\par
}
 